{"mappings":"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","sources":["src/index.ts","src/examples/corpus.ts","src/d128.ts","src/util.ts","src/examples/decimal128-1.json","src/examples/decimal128-2.json","src/examples/decimal128-3.json","src/examples/decimal128-4.json","src/examples/decimal128-5.json"],"sourcesContent":["import { addCorpusExamples } from './examples/corpus';\nimport { d128Info } from './util';\n\nlet numberInputEl: HTMLInputElement\nlet binEl: HTMLLIElement\nlet hexEl: HTMLLIElement\nlet decEl: HTMLLIElement\nlet errorEl: HTMLParagraphElement\n\nfunction onNumberChange() {\n    const inputString = numberInputEl.value\n\n    const { bin, hex, dec, error } = d128Info(inputString === '' ? '0' : inputString)\n\n    errorEl.innerHTML = error\n    binEl.innerText = bin\n    hexEl.innerText = hex\n    decEl.innerText = dec\n}\n\nexport async function main() {\n    numberInputEl = document.getElementById('numberInput') as HTMLInputElement\n    numberInputEl.addEventListener('input', onNumberChange)\n\n    binEl = document.getElementById('currentNumberBin') as HTMLLIElement\n    hexEl = document.getElementById('currentNumberHex') as HTMLLIElement\n    decEl = document.getElementById('currentNumberDec') as HTMLLIElement\n    errorEl = document.getElementById('error') as HTMLParagraphElement\n\n    onNumberChange()\n\n    addCorpusExamples()\n}\n\nwindow.addEventListener('DOMContentLoaded', main)\n","import { D128 } from '../d128.ts';\nimport { d128Info } from '../util.ts';\nimport d128_1 from './decimal128-1.json'\nimport d128_2 from './decimal128-2.json'\nimport d128_3 from './decimal128-3.json'\nimport d128_4 from './decimal128-4.json'\nimport d128_5 from './decimal128-5.json'\n// import d128_6 from './decimal128-6.json'\n// import d128_7 from './decimal128-7.json'\n\nconst examples = [\n    ...d128_1.valid,\n    ...d128_2.valid,\n    ...d128_3.valid,\n    ...d128_4.valid,\n    ...d128_5.valid,\n]\n\nconst bytesFromHex = (hex) => {\n    const bytes = []\n    for (let i = 0; i < hex.length; i += 2) {\n        const byte = hex.slice(i, i + 2)\n        bytes.push(Number.parseInt(byte, 16))\n    }\n    return new Uint8Array(bytes)\n}\n\n\nconst newExampleSection = ({ bin, hex, dec }) =>  {\n    const ul = document.createElement('ul')\n\n    const binEl = document.createElement('li')\n    binEl.innerText = bin\n\n    const hexEl = document.createElement('li')\n    hexEl.innerText = hex\n\n    const decEl = document.createElement('li')\n    decEl.innerText = dec\n\n    ul.appendChild(binEl)\n    ul.appendChild(hexEl)\n    ul.appendChild(decEl)\n\n    return ul\n}\n\nexport function addCorpusExamples() {\n    const examplesList = document.getElementById('corpusExamplesList')\n\n    for (const example of examples) {\n        const bytes = bytesFromHex(example.canonical_bson).subarray(7, 23)\n        const representation = D128.toString(bytes)\n\n        const ex = document.createElement('li')\n        const exName = document.createElement('span')\n        exName.classList.add('exampleName')\n        exName.innerText = example.description\n        ex.appendChild(exName)\n        ex.appendChild(newExampleSection(d128Info(representation)))\n        examplesList.appendChild(ex)\n    }\n}\n","const EXPONENT_MAX = 6111n;\nconst EXPONENT_MIN = -6176n;\nconst EXPONENT_BIAS = 6176n;\nconst MAX_DIGITS = 34;\n\nconst PARSE_STRING_REGEXP = /^(\\+|-)?(\\d+|(\\d*\\.\\d*))?(E|e)?([-+])?(\\d+)?$/;\nconst PARSE_INF_REGEXP = /^(\\+|-)?(Infinity|inf)$/i;\nconst PARSE_NAN_REGEXP = /^(\\+|-)?NaN$/i;\nconst EXPONENT_REGEX = /^([-+])?(\\d+)?$/;\n\n// Nan value bits as 32 bit values (due to lack of longs)\nconst NAN_BUFFER = new Uint8Array([\n    0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n].reverse());\n// Infinity value bits 32 bit values (due to lack of longs)\nconst INF_NEGATIVE_BUFFER = new Uint8Array([\n    0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n].reverse());\nconst INF_POSITIVE_BUFFER = new Uint8Array([\n    0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n].reverse());\n\nconst ASCII_ZERO = '0'.charCodeAt(0)\n// Extract least significant 5 bits\nconst COMBINATION_MASK = 0x1fn;\n// Extract least significant 14 bits\nconst EXPONENT_MASK = 0x3FFFn;\n// Value of combination field for Inf\nconst COMBINATION_INFINITY = 30n;\n// Value of combination field for NaN\nconst COMBINATION_NAN = 31n;\n\n\n/** Create a string representation of the raw Decimal128 value */\nfunction toString(buffer: Uint8Array): string {\n    // Note: bits in this routine are referred to starting at 0,\n    // from the sign bit, towards the coefficient.\n\n    const dv = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\n    // decoded biased exponent (14 bits)\n    let biased_exponent;\n    // the number of significand digits\n    let significand_digits = 0;\n    // the base-10 digits in the significand\n    const significand = Object.seal(new Array<number>(36).fill(0));\n\n\n    // true if the number is zero\n    let is_zero = false;\n\n    // the most significant significand bits (50-46)\n    let significand_msb;\n\n    // Output string\n    const string: string[] = [];\n\n    const lo64 = dv.getBigUint64(0, true)\n    const hi64 = dv.getBigUint64(8, true)\n\n    const asBigInt = hi64 << 64n | lo64\n\n    if (asBigInt & 0x8000_0000_0000_0000_0000_0000_0000_0000n) {\n        // sign bit is set\n        string.push('-');\n    }\n\n    // Decode combination field and exponent\n    // bits 1 - 5\n    const combination = (asBigInt >> 122n) & COMBINATION_MASK;\n\n    if (combination >> 3n === 0b11n) {\n        // Check for 'special' values\n        if (combination === COMBINATION_INFINITY) {\n            return string.join('') + 'Infinity';\n        } else if (combination === COMBINATION_NAN) {\n            return 'NaN';\n        } else {\n            biased_exponent = (asBigInt >> 111n) & EXPONENT_MASK;\n            significand_msb = 0b1000n + ((asBigInt >> 110n) & 0b1n);\n        }\n    } else {\n        significand_msb = (asBigInt >> 110n) & 0b111n;\n        biased_exponent = (asBigInt >> 113n) & EXPONENT_MASK;\n    }\n\n    // unbiased exponent\n    const exponent = Number(biased_exponent - EXPONENT_BIAS);\n\n    // Create string of significand digits\n\n    // Convert the 114-bit binary number represented by\n    // (significand_high, significand_low) to at most 34 decimal\n    // digits through modulo and division.\n    const maskBottomSig = asBigInt & 0x0000_3FFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFFn\n    const maskBottomMsb = significand_msb & 0xFn\n    const shiftBtmMsb = maskBottomMsb << 110n\n    const significand128 = shiftBtmMsb | maskBottomSig\n\n    if (significand128 === 0n) {\n        is_zero = true;\n    } else {\n        let least_digits = significand128\n        for (let i = 35; i >= 0; i--) {\n            significand[i] = Number(least_digits % 10n)\n            least_digits /= 10n\n        }\n    }\n\n    // Output format options:\n    // Scientific - [-]d.dddE(+/-)dd or [-]dE(+/-)dd\n    // Regular    - ddd.ddd\n\n    // read pointer into significand\n    let index = 0;\n\n    if (is_zero) {\n        significand_digits = 1;\n        significand[index] = 0;\n    } else {\n        significand_digits = 36;\n        while (significand[index] === 0) {\n            significand_digits = significand_digits - 1;\n            index = index + 1;\n        }\n    }\n\n    // the exponent if scientific notation is used\n    const scientific_exponent = significand_digits - 1 + exponent;\n\n    // The scientific exponent checks are dictated by the string conversion\n    // specification and are somewhat arbitrary cutoffs.\n    //\n    // We must check exponent > 0, because if this is the case, the number\n    // has trailing zeros.  However, we *cannot* output these trailing zeros,\n    // because doing so would change the precision of the value, and would\n    // change stored data if the string converted number is round tripped.\n    if (scientific_exponent >= 34 || scientific_exponent <= -7 || exponent > 0) {\n        // Scientific format\n\n        // if there are too many significant digits, we should just be treating numbers\n        // as + or - 0 and using the non-scientific exponent (this is for the \"invalid\n        // representation should be treated as 0/-0\" spec cases in decimal128-1.json)\n        if (significand_digits > 34) {\n            string.push(`${0}`);\n            if (exponent > 0) string.push('E+' + exponent);\n            else if (exponent < 0) string.push('E' + exponent);\n            return string.join('');\n        }\n\n        string.push(`${significand[index++]}`);\n        significand_digits = significand_digits - 1;\n\n        if (significand_digits) {\n            string.push('.');\n        }\n\n        for (let i = 0; i < significand_digits; i++) {\n            string.push(`${significand[index++]}`);\n        }\n\n        // Exponent\n        string.push('E');\n        if (scientific_exponent > 0) {\n            string.push('+' + scientific_exponent);\n        } else {\n            string.push(`${scientific_exponent}`);\n        }\n    } else {\n        // Regular format with no decimal place\n        if (exponent >= 0) {\n            for (let i = 0; i < significand_digits; i++) {\n                string.push(`${significand[index++]}`);\n            }\n        } else {\n            let radix_position = significand_digits + exponent;\n\n            // non-zero digits before radix\n            if (radix_position > 0) {\n                for (let i = 0; i < radix_position; i++) {\n                    string.push(`${significand[index++]}`);\n                }\n            } else {\n                string.push('0');\n            }\n\n            string.push('.');\n            // add leading zeros after radix\n            while (radix_position++ < 0) {\n                string.push('0');\n            }\n\n            for (let i = 0; i < significand_digits - Math.max(radix_position - 1, 0); i++) {\n                string.push(`${significand[index++]}`);\n            }\n        }\n    }\n\n    return string.join('');\n}\n\nconst invalidErr = (string: string, message: string) => {\n    throw new Error(`\"${string}\" is not a valid Decimal128 string - ${message}`);\n}\n\nconst decimalDigits = new Set(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'])\nconst isDigit = (value: string): boolean => decimalDigits.has(value)\nconst parseDigit = (value: string): number => value?.charCodeAt(0) - ASCII_ZERO\n\n/**\n * Create a Decimal128 instance from a string representation\n *\n * @param representation - a numeric string representation.\n */\nfunction fromString(representation: string): Uint8Array {\n    // Parse state tracking\n    let isNegative = false;\n    let sawRadix = false;\n    let foundNonZero = false;\n\n    // Total number of significant digits (no leading or trailing zero)\n    let significantDigits = 0;\n    // Total number of significand digits read\n    let nDigitsRead = 0;\n    // Total number of digits (no leading zeros)\n    let nDigits = 0;\n    // The number of the digits after radix\n    let radixPosition = 0n;\n    // The index of the first non-zero in *str*\n    let firstNonZero = 0;\n\n    // Digits Array\n    const digits = [0];\n    // The number of digits in digits\n    let nDigitsStored = 0;\n    // Insertion pointer for digits\n    let digitsInsert = 0;\n    // The index of the first non-zero digit\n    let firstDigit = 0;\n    // The index of the last digit\n    let lastDigit = 0;\n\n    // Exponent\n    let exponent = 0n;\n    // loop index over array\n    let i = 0;\n\n    // Read index\n    let index = 0;\n\n    // Naively prevent against REDOS attacks.\n    // TODO: implementing a custom parsing for this, or refactoring the regex would yield\n    //       further gains.\n    if (representation.length >= 7000) {\n        throw new Error(`${representation} not a valid Decimal128 string`);\n    }\n\n    // Results\n    const stringMatch = representation.match(PARSE_STRING_REGEXP);\n    const infMatch = representation.match(PARSE_INF_REGEXP);\n    const nanMatch = representation.match(PARSE_NAN_REGEXP);\n\n    // Validate the string\n    if ((!stringMatch && !infMatch && !nanMatch) || representation.length === 0) {\n        throw new Error(`${representation} not a valid Decimal128 string`);\n    }\n\n    if (stringMatch) {\n        // full_match = stringMatch[0]\n        // sign = stringMatch[1]\n\n        const unsignedNumber = stringMatch[2];\n        // stringMatch[3] is undefined if a whole number (ex \"1\", 12\")\n        // but defined if a number w/ decimal in it (ex \"1.0, 12.2\")\n\n        const e = stringMatch[4];\n        const expSign = stringMatch[5];\n        const expNumber = stringMatch[6];\n\n        // they provided e, but didn't give an exponent number. for ex \"1e\"\n        if (e && expNumber === undefined) invalidErr(representation, 'missing exponent power');\n\n        // they provided e, but didn't give a number before it. for ex \"e1\"\n        if (e && unsignedNumber === undefined) invalidErr(representation, 'missing exponent base');\n\n        if (e === undefined && (expSign || expNumber)) {\n            invalidErr(representation, 'missing e before exponent');\n        }\n    }\n\n    // Get the negative or positive sign\n    if (representation[index] === '+' || representation[index] === '-') {\n        isNegative = representation[index++] === '-';\n    }\n\n    // Check if user passed Infinity or NaN\n    if (!isDigit(representation[index]) && representation[index] !== '.') {\n        if (representation[index] === 'i' || representation[index] === 'I') {\n            return isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER;\n        } else if (representation[index] === 'N') {\n            return NAN_BUFFER;\n        }\n    }\n\n    // Read all the digits\n    while (isDigit(representation[index]) || representation[index] === '.') {\n        if (representation[index] === '.') {\n            if (sawRadix) invalidErr(representation, 'contains multiple periods');\n\n            sawRadix = true;\n            index = index + 1;\n            continue;\n        }\n\n        if (nDigitsStored < 34) {\n            if (representation[index] !== '0' || foundNonZero) {\n                if (!foundNonZero) {\n                    firstNonZero = nDigitsRead;\n                }\n\n                foundNonZero = true;\n\n                // Only store 34 digits\n                digits[digitsInsert++] = parseDigit(representation[index]);\n                nDigitsStored = nDigitsStored + 1;\n            }\n        }\n\n        if (foundNonZero) nDigits = nDigits + 1;\n        if (sawRadix) radixPosition = radixPosition + 1n;\n\n        nDigitsRead = nDigitsRead + 1;\n        index = index + 1;\n    }\n\n    if (sawRadix && !nDigitsRead)\n        throw new Error('' + representation + ' not a valid Decimal128 string');\n\n    // Read exponent if exists\n    if (representation[index] === 'e' || representation[index] === 'E') {\n        // Read exponent digits\n        const match = representation.substring(++index).match(EXPONENT_REGEX);\n\n        // No digits read\n        if (!match || !match[2]) return NAN_BUFFER;\n\n        // Get exponent\n        exponent = BigInt(Number.parseInt(match[0], 10));\n\n        // Adjust the index\n        index = index + match[0].length;\n    }\n\n    // Return not a number\n    if (representation[index]) return NAN_BUFFER;\n\n    // Done reading input\n    // Find first non-zero digit in digits\n    firstDigit = 0;\n\n    if (!nDigitsStored) {\n        firstDigit = 0;\n        lastDigit = 0;\n        digits[0] = 0;\n        nDigits = 1;\n        nDigitsStored = 1;\n        significantDigits = 0;\n    } else {\n        lastDigit = nDigitsStored - 1;\n        significantDigits = nDigits;\n        if (significantDigits !== 1) {\n            while (digits[firstNonZero + significantDigits - 1] === 0) {\n                significantDigits = significantDigits - 1;\n            }\n        }\n    }\n\n    // Normalization of exponent\n    // Correct exponent based on radix position, and shift significand as needed\n    // to represent user input\n\n    // Overflow prevention\n    if (exponent <= radixPosition && radixPosition - exponent > 1 << 14) {\n        exponent = EXPONENT_MIN;\n    } else {\n        exponent = exponent - radixPosition;\n    }\n\n    // Attempt to normalize the exponent\n    while (exponent > EXPONENT_MAX) {\n        // Shift exponent to significand and decrease\n        lastDigit = lastDigit + 1;\n\n        if (lastDigit - firstDigit > MAX_DIGITS) {\n            // Check if we have a zero then just hard clamp, otherwise fail\n            const digitsString = digits.join('');\n            if (digitsString.match(/^0+$/)) {\n                exponent = EXPONENT_MAX;\n                break;\n            }\n\n            invalidErr(representation, 'overflow');\n        }\n        exponent = exponent - 1n;\n    }\n\n    while (exponent < EXPONENT_MIN || nDigitsStored < nDigits) {\n        // Shift last digit. can only do this if < significant digits than # stored.\n        if (lastDigit === 0 && significantDigits < nDigitsStored) {\n            exponent = EXPONENT_MIN;\n            significantDigits = 0;\n            break;\n        }\n\n        if (nDigitsStored < nDigits) {\n            // adjust to match digits not stored\n            nDigits = nDigits - 1;\n        } else {\n            // adjust to round\n            lastDigit = lastDigit - 1;\n        }\n\n        if (exponent < EXPONENT_MAX) {\n            exponent = exponent + 1n;\n        } else {\n            // Check if we have a zero then just hard clamp, otherwise fail\n            const digitsString = digits.join('');\n            if (digitsString.match(/^0+$/)) {\n                exponent = EXPONENT_MAX;\n                break;\n            }\n            invalidErr(representation, 'overflow');\n        }\n    }\n\n    // Round\n    // We've normalized the exponent, but might still need to round.\n    if (lastDigit - firstDigit + 1 < significantDigits) {\n        let endOfString = nDigitsRead;\n\n        // If we have seen a radix point, 'string' is 1 longer than we have\n        // documented with ndigits_read, so inc the position of the first nonzero\n        // digit and the position that digits are read to.\n        if (sawRadix) {\n            firstNonZero = firstNonZero + 1;\n            endOfString = endOfString + 1;\n        }\n        // if negative, we need to increment again to account for - sign at start.\n        if (isNegative) {\n            firstNonZero = firstNonZero + 1;\n            endOfString = endOfString + 1;\n        }\n\n        const roundDigit = parseDigit(representation[firstNonZero + lastDigit + 1]);\n        let roundBit = 0;\n\n        if (roundDigit >= 5) {\n            roundBit = 1;\n            if (roundDigit === 5) {\n                roundBit = digits[lastDigit] % 2 === 1 ? 1 : 0;\n                for (i = firstNonZero + lastDigit + 2; i < endOfString; i++) {\n                    if (parseDigit(representation[i])) {\n                        roundBit = 1;\n                        break;\n                    }\n                }\n            }\n        }\n\n        if (roundBit) {\n            let dIdx = lastDigit;\n\n            for (; dIdx >= 0; dIdx--) {\n                if (++digits[dIdx] > 9) {\n                    digits[dIdx] = 0;\n\n                    // overflowed most significant digit\n                    if (dIdx === 0) {\n                        if (exponent < EXPONENT_MAX) {\n                            exponent = exponent + 1n;\n                            digits[dIdx] = 1;\n                        } else {\n                            return isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // Encode significand\n    // The 34 digits of the significand\n    let significand = 0n\n\n    const digitsAsBigInt = digits.map(n => BigInt(n))\n\n    if (significantDigits !== 0) {\n        significand = digitsAsBigInt[firstDigit]\n        for (let digitIndex = firstDigit + 1; digitIndex <= lastDigit; digitIndex++) {\n            let digit = digitsAsBigInt[digitIndex];\n            significand *= 10n\n            significand += digit\n        }\n    }\n\n    // Biased exponent\n    const biasedExponent = exponent + EXPONENT_BIAS;\n    let dec = 0n\n\n    // Encode combination, exponent, and significand.\n    if (((significand >> 113n) & 1n) === 1n) {\n        // Encode '11' into bits 1 to 3\n        dec |= 0b11n << 125n\n        dec |= (biasedExponent & 0x3FFFn) << 111n\n        dec |= significand & 0x7FFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFFn;\n    } else {\n        dec |= (biasedExponent & 0x3FFFn) << 113n\n        dec |= significand & 0x1FFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFFn;\n    }\n\n    // Encode sign\n    if (isNegative) {\n        dec |= 0x8000_0000_0000_0000_0000_0000_0000_0000n\n    }\n\n    // Encode into a buffer\n    const buffer = new ArrayBuffer(16);\n    const dv = new DataView(buffer)\n\n    dv.setBigUint64(0, dec & 0xFFFF_FFFF_FFFF_FFFF_FFFFn, true)\n    dv.setBigUint64(8, dec >> 64n, true)\n\n    return new Uint8Array(buffer)\n}\n\nfunction u128(bytes: Uint8Array) {\n    const dv = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength)\n    const lo64 = dv.getBigUint64(0, true)\n    const hi64 = dv.getBigUint64(8, true)\n    return hi64 << 64n | lo64\n}\n\nexport const D128 = { fromString, toString, u128 }\n","import { D128 } from './d128.ts';\n\nconst binDigits = (bytes: Uint8Array) => D128.u128(bytes).toString(2).padStart(128, '0')\nconst hexDigits = (bytes: Uint8Array) => D128.u128(bytes).toString(16).padStart(16, '0')\nconst splitInto = (sections: number, input: string) =>\n    input\n        .split(new RegExp(String.raw`([0-9a-fA-F]{${sections}})`))\n        .filter((section: string) => section.length === sections)\n        .join('_')\n\nexport function d128Info(inputString) {\n    let bin = '😭'\n    let hex = '😭'\n    let dec = '😭'\n\n    let error = ''\n\n    let bytes: Uint8Array\n    let representation: string\n\n    try {\n        bytes = D128.fromString(inputString)\n    } catch (e) {\n        error = `fromString - ${e}`\n        return { bin, hex, dec, error }\n    }\n\n    try {\n        representation = D128.toString(bytes)\n    } catch (e) {\n        error = `toString - ${e}`\n        return { bin, hex, dec, error }\n    }\n\n    bin = `0b${splitInto(16, binDigits(bytes))}`\n    hex = `0x${splitInto(8, hexDigits(bytes))}`\n    dec = representation\n\n    return { bin, hex, dec, error }\n}\n","{\n    \"description\": \"Decimal128\",\n    \"bson_type\": \"0x13\",\n    \"test_key\": \"d\",\n    \"valid\": [\n        {\n            \"description\": \"Special - Canonical NaN\",\n            \"canonical_bson\": \"180000001364000000000000000000000000000000007C00\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"NaN\\\"}}\"\n        },\n        {\n            \"description\": \"Special - Negative NaN\",\n            \"canonical_bson\": \"18000000136400000000000000000000000000000000FC00\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"NaN\\\"}}\",\n            \"lossy\": true\n        },\n        {\n            \"description\": \"Special - Negative NaN\",\n            \"canonical_bson\": \"18000000136400000000000000000000000000000000FC00\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"NaN\\\"}}\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-NaN\\\"}}\",\n            \"lossy\": true\n        },\n        {\n            \"description\": \"Special - Canonical SNaN\",\n            \"canonical_bson\": \"180000001364000000000000000000000000000000007E00\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"NaN\\\"}}\",\n            \"lossy\": true\n        },\n        {\n            \"description\": \"Special - Negative SNaN\",\n            \"canonical_bson\": \"18000000136400000000000000000000000000000000FE00\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"NaN\\\"}}\",\n            \"lossy\": true\n        },\n        {\n            \"description\": \"Special - NaN with a payload\",\n            \"canonical_bson\": \"180000001364001200000000000000000000000000007E00\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"NaN\\\"}}\",\n            \"lossy\": true\n        },\n        {\n            \"description\": \"Special - Canonical Positive Infinity\",\n            \"canonical_bson\": \"180000001364000000000000000000000000000000007800\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"Infinity\\\"}}\"\n        },\n        {\n            \"description\": \"Special - Canonical Negative Infinity\",\n            \"canonical_bson\": \"18000000136400000000000000000000000000000000F800\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-Infinity\\\"}}\"\n        },\n        {\n            \"description\": \"Special - Invalid representation treated as 0\",\n            \"canonical_bson\": \"180000001364000000000000000000000000000000106C00\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0\\\"}}\",\n            \"lossy\": true\n        },\n        {\n            \"description\": \"Special - Invalid representation treated as -0\",\n            \"canonical_bson\": \"18000000136400DCBA9876543210DEADBEEF00000010EC00\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0\\\"}}\",\n            \"lossy\": true\n        },\n        {\n            \"description\": \"Special - Invalid representation treated as 0E3\",\n            \"canonical_bson\": \"18000000136400FFFFFFFFFFFFFFFFFFFFFFFFFFFF116C00\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+3\\\"}}\",\n            \"lossy\": true\n        },\n        {\n            \"description\": \"Regular - Adjusted Exponent Limit\",\n            \"canonical_bson\": \"18000000136400F2AF967ED05C82DE3297FF6FDE3CF22F00\",\n            \"canonical_extjson\": \"{\\\"d\\\": { \\\"$numberDecimal\\\": \\\"0.000001234567890123456789012345678901234\\\" }}\"\n        },\n        {\n            \"description\": \"Regular - Smallest\",\n            \"canonical_bson\": \"18000000136400D204000000000000000000000000343000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.001234\\\"}}\"\n        },\n        {\n            \"description\": \"Regular - Smallest with Trailing Zeros\",\n            \"canonical_bson\": \"1800000013640040EF5A07000000000000000000002A3000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00123400000\\\"}}\"\n        },\n        {\n            \"description\": \"Regular - 0.1\",\n            \"canonical_bson\": \"1800000013640001000000000000000000000000003E3000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.1\\\"}}\"\n        },\n        {\n            \"description\": \"Regular - 0.1234567890123456789012345678901234\",\n            \"canonical_bson\": \"18000000136400F2AF967ED05C82DE3297FF6FDE3CFC2F00\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.1234567890123456789012345678901234\\\"}}\"\n        },\n        {\n            \"description\": \"Regular - 0\",\n            \"canonical_bson\": \"180000001364000000000000000000000000000000403000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0\\\"}}\"\n        },\n        {\n            \"description\": \"Regular - -0\",\n            \"canonical_bson\": \"18000000136400000000000000000000000000000040B000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0\\\"}}\"\n        },\n        {\n            \"description\": \"Regular - -0.0\",\n            \"canonical_bson\": \"1800000013640000000000000000000000000000003EB000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.0\\\"}}\"\n        },\n        {\n            \"description\": \"Regular - 2\",\n            \"canonical_bson\": \"180000001364000200000000000000000000000000403000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"2\\\"}}\"\n        },\n        {\n            \"description\": \"Regular - 2.000\",\n            \"canonical_bson\": \"18000000136400D0070000000000000000000000003A3000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"2.000\\\"}}\"\n        },\n        {\n            \"description\": \"Regular - Largest\",\n            \"canonical_bson\": \"18000000136400F2AF967ED05C82DE3297FF6FDE3C403000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1234567890123456789012345678901234\\\"}}\"\n        },\n        {\n            \"description\": \"Scientific - Tiniest\",\n            \"canonical_bson\": \"18000000136400FFFFFFFF638E8D37C087ADBE09ED010000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"9.999999999999999999999999999999999E-6143\\\"}}\"\n        },\n        {\n            \"description\": \"Scientific - Tiny\",\n            \"canonical_bson\": \"180000001364000100000000000000000000000000000000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E-6176\\\"}}\"\n        },\n        {\n            \"description\": \"Scientific - Negative Tiny\",\n            \"canonical_bson\": \"180000001364000100000000000000000000000000008000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1E-6176\\\"}}\"\n        },\n        {\n            \"description\": \"Scientific - Adjusted Exponent Limit\",\n            \"canonical_bson\": \"18000000136400F2AF967ED05C82DE3297FF6FDE3CF02F00\",\n            \"canonical_extjson\": \"{\\\"d\\\": { \\\"$numberDecimal\\\": \\\"1.234567890123456789012345678901234E-7\\\" }}\"\n        },\n        {\n            \"description\": \"Scientific - Fractional\",\n            \"canonical_bson\": \"1800000013640064000000000000000000000000002CB000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1.00E-8\\\"}}\"\n        },\n        {\n            \"description\": \"Scientific - 0 with Exponent\",\n            \"canonical_bson\": \"180000001364000000000000000000000000000000205F00\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+6000\\\"}}\"\n        },\n        {\n            \"description\": \"Scientific - 0 with Negative Exponent\",\n            \"canonical_bson\": \"1800000013640000000000000000000000000000007A2B00\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E-611\\\"}}\"\n        },\n        {\n            \"description\": \"Scientific - No Decimal with Signed Exponent\",\n            \"canonical_bson\": \"180000001364000100000000000000000000000000463000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+3\\\"}}\"\n        },\n        {\n            \"description\": \"Scientific - Trailing Zero\",\n            \"canonical_bson\": \"180000001364001A04000000000000000000000000423000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.050E+4\\\"}}\"\n        },\n        {\n            \"description\": \"Scientific - With Decimal\",\n            \"canonical_bson\": \"180000001364006900000000000000000000000000423000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.05E+3\\\"}}\"\n        },\n        {\n            \"description\": \"Scientific - Full\",\n            \"canonical_bson\": \"18000000136400FFFFFFFFFFFFFFFFFFFFFFFFFFFF403000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"5192296858534827628530496329220095\\\"}}\"\n        },\n        {\n            \"description\": \"Scientific - Large\",\n            \"canonical_bson\": \"18000000136400000000000A5BC138938D44C64D31FE5F00\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000000000000000000000000000000E+6144\\\"}}\"\n        },\n        {\n            \"description\": \"Scientific - Largest\",\n            \"canonical_bson\": \"18000000136400FFFFFFFF638E8D37C087ADBE09EDFF5F00\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"9.999999999999999999999999999999999E+6144\\\"}}\"\n        },\n        {\n            \"description\": \"Non-Canonical Parsing - Exponent Normalization\",\n            \"canonical_bson\": \"1800000013640064000000000000000000000000002CB000\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-100E-10\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1.00E-8\\\"}}\"\n        },\n        {\n            \"description\": \"Non-Canonical Parsing - Unsigned Positive Exponent\",\n            \"canonical_bson\": \"180000001364000100000000000000000000000000463000\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E3\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+3\\\"}}\"\n        },\n        {\n            \"description\": \"Non-Canonical Parsing - Lowercase Exponent Identifier\",\n            \"canonical_bson\": \"180000001364000100000000000000000000000000463000\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1e+3\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+3\\\"}}\"\n        },\n        {\n            \"description\": \"Non-Canonical Parsing - Long Significand with Exponent\",\n            \"canonical_bson\": \"1800000013640079D9E0F9763ADA429D0200000000583000\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12345689012345789012345E+12\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.2345689012345789012345E+34\\\"}}\"\n        },\n        {\n            \"description\": \"Non-Canonical Parsing - Positive Sign\",\n            \"canonical_bson\": \"18000000136400F2AF967ED05C82DE3297FF6FDE3C403000\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"+1234567890123456789012345678901234\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1234567890123456789012345678901234\\\"}}\"\n        },\n        {\n            \"description\": \"Non-Canonical Parsing - Long Decimal String\",\n            \"canonical_bson\": \"180000001364000100000000000000000000000000722800\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\".000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E-999\\\"}}\"\n        },\n        {\n            \"description\": \"Non-Canonical Parsing - nan\",\n            \"canonical_bson\": \"180000001364000000000000000000000000000000007C00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"nan\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"NaN\\\"}}\"\n        },\n        {\n            \"description\": \"Non-Canonical Parsing - nAn\",\n            \"canonical_bson\": \"180000001364000000000000000000000000000000007C00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"nAn\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"NaN\\\"}}\"\n        },\n        {\n            \"description\": \"Non-Canonical Parsing - +infinity\",\n            \"canonical_bson\": \"180000001364000000000000000000000000000000007800\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"+infinity\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"Infinity\\\"}}\"\n        },\n        {\n            \"description\": \"Non-Canonical Parsing - infinity\",\n            \"canonical_bson\": \"180000001364000000000000000000000000000000007800\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"infinity\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"Infinity\\\"}}\"\n        },\n        {\n            \"description\": \"Non-Canonical Parsing - infiniTY\",\n            \"canonical_bson\": \"180000001364000000000000000000000000000000007800\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"infiniTY\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"Infinity\\\"}}\"\n        },\n        {\n            \"description\": \"Non-Canonical Parsing - inf\",\n            \"canonical_bson\": \"180000001364000000000000000000000000000000007800\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"inf\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"Infinity\\\"}}\"\n        },\n        {\n            \"description\": \"Non-Canonical Parsing - inF\",\n            \"canonical_bson\": \"180000001364000000000000000000000000000000007800\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"inF\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"Infinity\\\"}}\"\n        },\n        {\n            \"description\": \"Non-Canonical Parsing - -infinity\",\n            \"canonical_bson\": \"18000000136400000000000000000000000000000000F800\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-infinity\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-Infinity\\\"}}\"\n        },\n        {\n            \"description\": \"Non-Canonical Parsing - -infiniTy\",\n            \"canonical_bson\": \"18000000136400000000000000000000000000000000F800\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-infiniTy\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-Infinity\\\"}}\"\n        },\n        {\n            \"description\": \"Non-Canonical Parsing - -Inf\",\n            \"canonical_bson\": \"18000000136400000000000000000000000000000000F800\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-Infinity\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-Infinity\\\"}}\"\n        },\n        {\n            \"description\": \"Non-Canonical Parsing - -inf\",\n            \"canonical_bson\": \"18000000136400000000000000000000000000000000F800\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-inf\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-Infinity\\\"}}\"\n        },\n        {\n            \"description\": \"Non-Canonical Parsing - -inF\",\n            \"canonical_bson\": \"18000000136400000000000000000000000000000000F800\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-inF\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-Infinity\\\"}}\"\n        },\n        {\n           \"description\": \"Rounded Subnormal number\",\n           \"canonical_bson\": \"180000001364000100000000000000000000000000000000\",\n           \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10E-6177\\\"}}\",\n           \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E-6176\\\"}}\"\n        },\n        {\n           \"description\": \"Clamped\",\n           \"canonical_bson\": \"180000001364000a00000000000000000000000000fe5f00\",\n           \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E6112\\\"}}\",\n           \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E+6112\\\"}}\"\n        },\n        {\n           \"description\": \"Exact rounding\",\n           \"canonical_bson\": \"18000000136400000000000a5bc138938d44c64d31cc3700\",\n           \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\\"}}\",\n           \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000000000000000000000000000000E+999\\\"}}\"\n        }\n    ]\n}\n","{\n    \"description\": \"Decimal128\",\n    \"bson_type\": \"0x13\",\n    \"test_key\": \"d\",\n    \"valid\": [\n       {\n          \"description\": \"[decq021] Normality\",\n          \"canonical_bson\": \"18000000136400F2AF967ED05C82DE3297FF6FDE3C40B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1234567890123456789012345678901234\\\"}}\"\n       },\n       {\n          \"description\": \"[decq823] values around [u]int32 edges (zeros done earlier)\",\n          \"canonical_bson\": \"18000000136400010000800000000000000000000040B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-2147483649\\\"}}\"\n       },\n       {\n          \"description\": \"[decq822] values around [u]int32 edges (zeros done earlier)\",\n          \"canonical_bson\": \"18000000136400000000800000000000000000000040B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-2147483648\\\"}}\"\n       },\n       {\n          \"description\": \"[decq821] values around [u]int32 edges (zeros done earlier)\",\n          \"canonical_bson\": \"18000000136400FFFFFF7F0000000000000000000040B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-2147483647\\\"}}\"\n       },\n       {\n          \"description\": \"[decq820] values around [u]int32 edges (zeros done earlier)\",\n          \"canonical_bson\": \"18000000136400FEFFFF7F0000000000000000000040B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-2147483646\\\"}}\"\n       },\n       {\n          \"description\": \"[decq152] fold-downs (more below)\",\n          \"canonical_bson\": \"18000000136400393000000000000000000000000040B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-12345\\\"}}\"\n       },\n       {\n          \"description\": \"[decq154] fold-downs (more below)\",\n          \"canonical_bson\": \"18000000136400D20400000000000000000000000040B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1234\\\"}}\"\n       },\n       {\n          \"description\": \"[decq006] derivative canonical plain strings\",\n          \"canonical_bson\": \"18000000136400EE0200000000000000000000000040B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-750\\\"}}\"\n       },\n       {\n          \"description\": \"[decq164] fold-downs (more below)\",\n          \"canonical_bson\": \"1800000013640039300000000000000000000000003CB000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-123.45\\\"}}\"\n       },\n       {\n          \"description\": \"[decq156] fold-downs (more below)\",\n          \"canonical_bson\": \"180000001364007B0000000000000000000000000040B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-123\\\"}}\"\n       },\n       {\n          \"description\": \"[decq008] derivative canonical plain strings\",\n          \"canonical_bson\": \"18000000136400EE020000000000000000000000003EB000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-75.0\\\"}}\"\n       },\n       {\n          \"description\": \"[decq158] fold-downs (more below)\",\n          \"canonical_bson\": \"180000001364000C0000000000000000000000000040B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-12\\\"}}\"\n       },\n       {\n          \"description\": \"[decq122] Nmax and similar\",\n          \"canonical_bson\": \"18000000136400FFFFFFFF638E8D37C087ADBE09EDFFDF00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-9.999999999999999999999999999999999E+6144\\\"}}\"\n       },\n       {\n          \"description\": \"[decq002] (mostly derived from the Strawman 4 document and examples)\",\n          \"canonical_bson\": \"18000000136400EE020000000000000000000000003CB000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-7.50\\\"}}\"\n       },\n       {\n          \"description\": \"[decq004] derivative canonical plain strings\",\n          \"canonical_bson\": \"18000000136400EE0200000000000000000000000042B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-7.50E+3\\\"}}\"\n       },\n       {\n          \"description\": \"[decq018] derivative canonical plain strings\",\n          \"canonical_bson\": \"18000000136400EE020000000000000000000000002EB000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-7.50E-7\\\"}}\"\n       },\n       {\n          \"description\": \"[decq125] Nmax and similar\",\n          \"canonical_bson\": \"18000000136400F2AF967ED05C82DE3297FF6FDE3CFEDF00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1.234567890123456789012345678901234E+6144\\\"}}\"\n       },\n       {\n          \"description\": \"[decq131] fold-downs (more below)\",\n          \"canonical_bson\": \"18000000136400000000807F1BCF85B27059C8A43CFEDF00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1.230000000000000000000000000000000E+6144\\\"}}\"\n       },\n       {\n          \"description\": \"[decq162] fold-downs (more below)\",\n          \"canonical_bson\": \"180000001364007B000000000000000000000000003CB000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1.23\\\"}}\"\n       },\n       {\n          \"description\": \"[decq176] Nmin and below\",\n          \"canonical_bson\": \"18000000136400010000000A5BC138938D44C64D31008000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1.000000000000000000000000000000001E-6143\\\"}}\"\n       },\n       {\n          \"description\": \"[decq174] Nmin and below\",\n          \"canonical_bson\": \"18000000136400000000000A5BC138938D44C64D31008000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1.000000000000000000000000000000000E-6143\\\"}}\"\n       },\n       {\n          \"description\": \"[decq133] fold-downs (more below)\",\n          \"canonical_bson\": \"18000000136400000000000A5BC138938D44C64D31FEDF00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1.000000000000000000000000000000000E+6144\\\"}}\"\n       },\n       {\n          \"description\": \"[decq160] fold-downs (more below)\",\n          \"canonical_bson\": \"18000000136400010000000000000000000000000040B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1\\\"}}\"\n       },\n       {\n          \"description\": \"[decq172] Nmin and below\",\n          \"canonical_bson\": \"180000001364000100000000000000000000000000428000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1E-6143\\\"}}\"\n       },\n       {\n          \"description\": \"[decq010] derivative canonical plain strings\",\n          \"canonical_bson\": \"18000000136400EE020000000000000000000000003AB000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.750\\\"}}\"\n       },\n       {\n          \"description\": \"[decq012] derivative canonical plain strings\",\n          \"canonical_bson\": \"18000000136400EE0200000000000000000000000038B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.0750\\\"}}\"\n       },\n       {\n          \"description\": \"[decq014] derivative canonical plain strings\",\n          \"canonical_bson\": \"18000000136400EE0200000000000000000000000034B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.000750\\\"}}\"\n       },\n       {\n          \"description\": \"[decq016] derivative canonical plain strings\",\n          \"canonical_bson\": \"18000000136400EE0200000000000000000000000030B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.00000750\\\"}}\"\n       },\n       {\n          \"description\": \"[decq404] zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000000000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E-6176\\\"}}\"\n       },\n       {\n          \"description\": \"[decq424] negative zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000008000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0E-6176\\\"}}\"\n       },\n       {\n          \"description\": \"[decq407] zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003C3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00\\\"}}\"\n       },\n       {\n          \"description\": \"[decq427] negative zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003CB000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.00\\\"}}\"\n       },\n       {\n          \"description\": \"[decq409] zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0\\\"}}\"\n       },\n       {\n          \"description\": \"[decq428] negative zeros\",\n          \"canonical_bson\": \"18000000136400000000000000000000000000000040B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0\\\"}}\"\n       },\n       {\n          \"description\": \"[decq700] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0\\\"}}\"\n       },\n       {\n          \"description\": \"[decq406] zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003C3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00\\\"}}\"\n       },\n       {\n          \"description\": \"[decq426] negative zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003CB000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.00\\\"}}\"\n       },\n       {\n          \"description\": \"[decq410] zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000463000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+3\\\"}}\"\n       },\n       {\n          \"description\": \"[decq431] negative zeros\",\n          \"canonical_bson\": \"18000000136400000000000000000000000000000046B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0E+3\\\"}}\"\n       },\n       {\n          \"description\": \"[decq419] clamped zeros...\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+6111\\\"}}\"\n       },\n       {\n          \"description\": \"[decq432] negative zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000FEDF00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0E+6111\\\"}}\"\n       },\n       {\n          \"description\": \"[decq405] zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000000000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E-6176\\\"}}\"\n       },\n       {\n          \"description\": \"[decq425] negative zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000008000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0E-6176\\\"}}\"\n       },\n       {\n          \"description\": \"[decq508] Specials\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000007800\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"Infinity\\\"}}\"\n       },\n       {\n          \"description\": \"[decq528] Specials\",\n          \"canonical_bson\": \"18000000136400000000000000000000000000000000F800\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-Infinity\\\"}}\"\n       },\n       {\n          \"description\": \"[decq541] Specials\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000007C00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"NaN\\\"}}\"\n       },\n       {\n          \"description\": \"[decq074] Nmin and below\",\n          \"canonical_bson\": \"18000000136400000000000A5BC138938D44C64D31000000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000000000000000000000000000000E-6143\\\"}}\"\n       },\n       {\n          \"description\": \"[decq602] fold-down full sequence\",\n          \"canonical_bson\": \"18000000136400000000000A5BC138938D44C64D31FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000000000000000000000000000000E+6144\\\"}}\"\n       },\n       {\n          \"description\": \"[decq604] fold-down full sequence\",\n          \"canonical_bson\": \"180000001364000000000081EFAC855B416D2DEE04FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00000000000000000000000000000000E+6143\\\"}}\"\n       },\n       {\n          \"description\": \"[decq606] fold-down full sequence\",\n          \"canonical_bson\": \"1800000013640000000080264B91C02220BE377E00FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0000000000000000000000000000000E+6142\\\"}}\"\n       },\n       {\n          \"description\": \"[decq608] fold-down full sequence\",\n          \"canonical_bson\": \"1800000013640000000040EAED7446D09C2C9F0C00FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000000000000000000000000000E+6141\\\"}}\"\n       },\n       {\n          \"description\": \"[decq610] fold-down full sequence\",\n          \"canonical_bson\": \"18000000136400000000A0CA17726DAE0F1E430100FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00000000000000000000000000000E+6140\\\"}}\"\n       },\n       {\n          \"description\": \"[decq612] fold-down full sequence\",\n          \"canonical_bson\": \"18000000136400000000106102253E5ECE4F200000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0000000000000000000000000000E+6139\\\"}}\"\n       },\n       {\n          \"description\": \"[decq614] fold-down full sequence\",\n          \"canonical_bson\": \"18000000136400000000E83C80D09F3C2E3B030000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000000000000000000000000E+6138\\\"}}\"\n       },\n       {\n          \"description\": \"[decq616] fold-down full sequence\",\n          \"canonical_bson\": \"18000000136400000000E4D20CC8DCD2B752000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00000000000000000000000000E+6137\\\"}}\"\n       },\n       {\n          \"description\": \"[decq618] fold-down full sequence\",\n          \"canonical_bson\": \"180000001364000000004A48011416954508000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0000000000000000000000000E+6136\\\"}}\"\n       },\n       {\n          \"description\": \"[decq620] fold-down full sequence\",\n          \"canonical_bson\": \"18000000136400000000A1EDCCCE1BC2D300000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000000000000000000000E+6135\\\"}}\"\n       },\n       {\n          \"description\": \"[decq622] fold-down full sequence\",\n          \"canonical_bson\": \"18000000136400000080F64AE1C7022D1500000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00000000000000000000000E+6134\\\"}}\"\n       },\n       {\n          \"description\": \"[decq624] fold-down full sequence\",\n          \"canonical_bson\": \"18000000136400000040B2BAC9E0191E0200000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0000000000000000000000E+6133\\\"}}\"\n       },\n       {\n          \"description\": \"[decq626] fold-down full sequence\",\n          \"canonical_bson\": \"180000001364000000A0DEC5ADC935360000000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000000000000000000E+6132\\\"}}\"\n       },\n       {\n          \"description\": \"[decq628] fold-down full sequence\",\n          \"canonical_bson\": \"18000000136400000010632D5EC76B050000000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00000000000000000000E+6131\\\"}}\"\n       },\n       {\n          \"description\": \"[decq630] fold-down full sequence\",\n          \"canonical_bson\": \"180000001364000000E8890423C78A000000000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0000000000000000000E+6130\\\"}}\"\n       },\n       {\n          \"description\": \"[decq632] fold-down full sequence\",\n          \"canonical_bson\": \"18000000136400000064A7B3B6E00D000000000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000000000000000E+6129\\\"}}\"\n       },\n       {\n          \"description\": \"[decq634] fold-down full sequence\",\n          \"canonical_bson\": \"1800000013640000008A5D78456301000000000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00000000000000000E+6128\\\"}}\"\n       },\n       {\n          \"description\": \"[decq636] fold-down full sequence\",\n          \"canonical_bson\": \"180000001364000000C16FF2862300000000000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0000000000000000E+6127\\\"}}\"\n       },\n       {\n          \"description\": \"[decq638] fold-down full sequence\",\n          \"canonical_bson\": \"180000001364000080C6A47E8D0300000000000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000000000000E+6126\\\"}}\"\n       },\n       {\n          \"description\": \"[decq640] fold-down full sequence\",\n          \"canonical_bson\": \"1800000013640000407A10F35A0000000000000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00000000000000E+6125\\\"}}\"\n       },\n       {\n          \"description\": \"[decq642] fold-down full sequence\",\n          \"canonical_bson\": \"1800000013640000A0724E18090000000000000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0000000000000E+6124\\\"}}\"\n       },\n       {\n          \"description\": \"[decq644] fold-down full sequence\",\n          \"canonical_bson\": \"180000001364000010A5D4E8000000000000000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000000000E+6123\\\"}}\"\n       },\n       {\n          \"description\": \"[decq646] fold-down full sequence\",\n          \"canonical_bson\": \"1800000013640000E8764817000000000000000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00000000000E+6122\\\"}}\"\n       },\n       {\n          \"description\": \"[decq648] fold-down full sequence\",\n          \"canonical_bson\": \"1800000013640000E40B5402000000000000000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0000000000E+6121\\\"}}\"\n       },\n       {\n          \"description\": \"[decq650] fold-down full sequence\",\n          \"canonical_bson\": \"1800000013640000CA9A3B00000000000000000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000000E+6120\\\"}}\"\n       },\n       {\n          \"description\": \"[decq652] fold-down full sequence\",\n          \"canonical_bson\": \"1800000013640000E1F50500000000000000000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00000000E+6119\\\"}}\"\n       },\n       {\n          \"description\": \"[decq654] fold-down full sequence\",\n          \"canonical_bson\": \"180000001364008096980000000000000000000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0000000E+6118\\\"}}\"\n       },\n       {\n          \"description\": \"[decq656] fold-down full sequence\",\n          \"canonical_bson\": \"1800000013640040420F0000000000000000000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000E+6117\\\"}}\"\n       },\n       {\n          \"description\": \"[decq658] fold-down full sequence\",\n          \"canonical_bson\": \"18000000136400A086010000000000000000000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00000E+6116\\\"}}\"\n       },\n       {\n          \"description\": \"[decq660] fold-down full sequence\",\n          \"canonical_bson\": \"180000001364001027000000000000000000000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0000E+6115\\\"}}\"\n       },\n       {\n          \"description\": \"[decq662] fold-down full sequence\",\n          \"canonical_bson\": \"18000000136400E803000000000000000000000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000E+6114\\\"}}\"\n       },\n       {\n          \"description\": \"[decq664] fold-down full sequence\",\n          \"canonical_bson\": \"180000001364006400000000000000000000000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00E+6113\\\"}}\"\n       },\n       {\n          \"description\": \"[decq666] fold-down full sequence\",\n          \"canonical_bson\": \"180000001364000A00000000000000000000000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E+6112\\\"}}\"\n       },\n       {\n          \"description\": \"[decq060] fold-downs (more below)\",\n          \"canonical_bson\": \"180000001364000100000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1\\\"}}\"\n       },\n       {\n          \"description\": \"[decq670] fold-down full sequence\",\n          \"canonical_bson\": \"180000001364000100000000000000000000000000FC5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6110\\\"}}\"\n       },\n       {\n          \"description\": \"[decq668] fold-down full sequence\",\n          \"canonical_bson\": \"180000001364000100000000000000000000000000FE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6111\\\"}}\"\n       },\n       {\n          \"description\": \"[decq072] Nmin and below\",\n          \"canonical_bson\": \"180000001364000100000000000000000000000000420000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E-6143\\\"}}\"\n       },\n       {\n          \"description\": \"[decq076] Nmin and below\",\n          \"canonical_bson\": \"18000000136400010000000A5BC138938D44C64D31000000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000000000000000000000000000001E-6143\\\"}}\"\n       },\n       {\n          \"description\": \"[decq036] fold-downs (more below)\",\n          \"canonical_bson\": \"18000000136400000000807F1BCF85B27059C8A43CFE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.230000000000000000000000000000000E+6144\\\"}}\"\n       },\n       {\n          \"description\": \"[decq062] fold-downs (more below)\",\n          \"canonical_bson\": \"180000001364007B000000000000000000000000003C3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.23\\\"}}\"\n       },\n       {\n          \"description\": \"[decq034] Nmax and similar\",\n          \"canonical_bson\": \"18000000136400F2AF967ED05C82DE3297FF6FDE3CFE5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.234567890123456789012345678901234E+6144\\\"}}\"\n       },\n       {\n          \"description\": \"[decq441] exponent lengths\",\n          \"canonical_bson\": \"180000001364000700000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7\\\"}}\"\n       },\n       {\n          \"description\": \"[decq449] exponent lengths\",\n          \"canonical_bson\": \"1800000013640007000000000000000000000000001E5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E+5999\\\"}}\"\n       },\n       {\n          \"description\": \"[decq447] exponent lengths\",\n          \"canonical_bson\": \"1800000013640007000000000000000000000000000E3800\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E+999\\\"}}\"\n       },\n       {\n          \"description\": \"[decq445] exponent lengths\",\n          \"canonical_bson\": \"180000001364000700000000000000000000000000063100\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E+99\\\"}}\"\n       },\n       {\n          \"description\": \"[decq443] exponent lengths\",\n          \"canonical_bson\": \"180000001364000700000000000000000000000000523000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E+9\\\"}}\"\n       },\n       {\n          \"description\": \"[decq842] VG testcase\",\n          \"canonical_bson\": \"180000001364000000FED83F4E7C9FE4E269E38A5BCD1700\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7.049000000000010795488000000000000E-3097\\\"}}\"\n       },\n       {\n          \"description\": \"[decq841] VG testcase\",\n          \"canonical_bson\": \"180000001364000000203B9DB5056F000000000000002400\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"8.000000000000000000E-1550\\\"}}\"\n       },\n       {\n          \"description\": \"[decq840] VG testcase\",\n          \"canonical_bson\": \"180000001364003C17258419D710C42F0000000000002400\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"8.81125000000001349436E-1548\\\"}}\"\n       },\n       {\n          \"description\": \"[decq701] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364000900000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"9\\\"}}\"\n       },\n       {\n          \"description\": \"[decq032] Nmax and similar\",\n          \"canonical_bson\": \"18000000136400FFFFFFFF638E8D37C087ADBE09EDFF5F00\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"9.999999999999999999999999999999999E+6144\\\"}}\"\n       },\n       {\n          \"description\": \"[decq702] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364000A00000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10\\\"}}\"\n       },\n       {\n          \"description\": \"[decq057] fold-downs (more below)\",\n          \"canonical_bson\": \"180000001364000C00000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12\\\"}}\"\n       },\n       {\n          \"description\": \"[decq703] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364001300000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"19\\\"}}\"\n       },\n       {\n          \"description\": \"[decq704] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364001400000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"20\\\"}}\"\n       },\n       {\n          \"description\": \"[decq705] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364001D00000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"29\\\"}}\"\n       },\n       {\n          \"description\": \"[decq706] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364001E00000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"30\\\"}}\"\n       },\n       {\n          \"description\": \"[decq707] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364002700000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"39\\\"}}\"\n       },\n       {\n          \"description\": \"[decq708] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364002800000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"40\\\"}}\"\n       },\n       {\n          \"description\": \"[decq709] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364003100000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"49\\\"}}\"\n       },\n       {\n          \"description\": \"[decq710] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364003200000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"50\\\"}}\"\n       },\n       {\n          \"description\": \"[decq711] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364003B00000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"59\\\"}}\"\n       },\n       {\n          \"description\": \"[decq712] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364003C00000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"60\\\"}}\"\n       },\n       {\n          \"description\": \"[decq713] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364004500000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"69\\\"}}\"\n       },\n       {\n          \"description\": \"[decq714] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364004600000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"70\\\"}}\"\n       },\n       {\n          \"description\": \"[decq715] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364004700000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"71\\\"}}\"\n       },\n       {\n          \"description\": \"[decq716] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364004800000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"72\\\"}}\"\n       },\n       {\n          \"description\": \"[decq717] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364004900000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"73\\\"}}\"\n       },\n       {\n          \"description\": \"[decq718] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364004A00000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"74\\\"}}\"\n       },\n       {\n          \"description\": \"[decq719] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364004B00000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"75\\\"}}\"\n       },\n       {\n          \"description\": \"[decq720] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364004C00000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"76\\\"}}\"\n       },\n       {\n          \"description\": \"[decq721] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364004D00000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"77\\\"}}\"\n       },\n       {\n          \"description\": \"[decq722] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364004E00000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"78\\\"}}\"\n       },\n       {\n          \"description\": \"[decq723] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364004F00000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"79\\\"}}\"\n       },\n       {\n          \"description\": \"[decq056] fold-downs (more below)\",\n          \"canonical_bson\": \"180000001364007B00000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"123\\\"}}\"\n       },\n       {\n          \"description\": \"[decq064] fold-downs (more below)\",\n          \"canonical_bson\": \"1800000013640039300000000000000000000000003C3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"123.45\\\"}}\"\n       },\n       {\n          \"description\": \"[decq732] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364000802000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"520\\\"}}\"\n       },\n       {\n          \"description\": \"[decq733] Selected DPD codes\",\n          \"canonical_bson\": \"180000001364000902000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"521\\\"}}\"\n       },\n       {\n          \"description\": \"[decq740] DPD: one of each of the huffman groups\",\n          \"canonical_bson\": \"180000001364000903000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"777\\\"}}\"\n       },\n       {\n          \"description\": \"[decq741] DPD: one of each of the huffman groups\",\n          \"canonical_bson\": \"180000001364000A03000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"778\\\"}}\"\n       },\n       {\n          \"description\": \"[decq742] DPD: one of each of the huffman groups\",\n          \"canonical_bson\": \"180000001364001303000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"787\\\"}}\"\n       },\n       {\n          \"description\": \"[decq746] DPD: one of each of the huffman groups\",\n          \"canonical_bson\": \"180000001364001F03000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"799\\\"}}\"\n       },\n       {\n          \"description\": \"[decq743] DPD: one of each of the huffman groups\",\n          \"canonical_bson\": \"180000001364006D03000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"877\\\"}}\"\n       },\n       {\n          \"description\": \"[decq753] DPD all-highs cases (includes the 24 redundant codes)\",\n          \"canonical_bson\": \"180000001364007803000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"888\\\"}}\"\n       },\n       {\n          \"description\": \"[decq754] DPD all-highs cases (includes the 24 redundant codes)\",\n          \"canonical_bson\": \"180000001364007903000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"889\\\"}}\"\n       },\n       {\n          \"description\": \"[decq760] DPD all-highs cases (includes the 24 redundant codes)\",\n          \"canonical_bson\": \"180000001364008203000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"898\\\"}}\"\n       },\n       {\n          \"description\": \"[decq764] DPD all-highs cases (includes the 24 redundant codes)\",\n          \"canonical_bson\": \"180000001364008303000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"899\\\"}}\"\n       },\n       {\n          \"description\": \"[decq745] DPD: one of each of the huffman groups\",\n          \"canonical_bson\": \"18000000136400D303000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"979\\\"}}\"\n       },\n       {\n          \"description\": \"[decq770] DPD all-highs cases (includes the 24 redundant codes)\",\n          \"canonical_bson\": \"18000000136400DC03000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"988\\\"}}\"\n       },\n       {\n          \"description\": \"[decq774] DPD all-highs cases (includes the 24 redundant codes)\",\n          \"canonical_bson\": \"18000000136400DD03000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"989\\\"}}\"\n       },\n       {\n          \"description\": \"[decq730] Selected DPD codes\",\n          \"canonical_bson\": \"18000000136400E203000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"994\\\"}}\"\n       },\n       {\n          \"description\": \"[decq731] Selected DPD codes\",\n          \"canonical_bson\": \"18000000136400E303000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"995\\\"}}\"\n       },\n       {\n          \"description\": \"[decq744] DPD: one of each of the huffman groups\",\n          \"canonical_bson\": \"18000000136400E503000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"997\\\"}}\"\n       },\n       {\n          \"description\": \"[decq780] DPD all-highs cases (includes the 24 redundant codes)\",\n          \"canonical_bson\": \"18000000136400E603000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"998\\\"}}\"\n       },\n       {\n          \"description\": \"[decq787] DPD all-highs cases (includes the 24 redundant codes)\",\n          \"canonical_bson\": \"18000000136400E703000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"999\\\"}}\"\n       },\n       {\n          \"description\": \"[decq053] fold-downs (more below)\",\n          \"canonical_bson\": \"18000000136400D204000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1234\\\"}}\"\n       },\n       {\n          \"description\": \"[decq052] fold-downs (more below)\",\n          \"canonical_bson\": \"180000001364003930000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12345\\\"}}\"\n       },\n       {\n          \"description\": \"[decq792] Miscellaneous (testers' queries, etc.)\",\n          \"canonical_bson\": \"180000001364003075000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"30000\\\"}}\"\n       },\n       {\n          \"description\": \"[decq793] Miscellaneous (testers' queries, etc.)\",\n          \"canonical_bson\": \"1800000013640090940D0000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"890000\\\"}}\"\n       },\n       {\n          \"description\": \"[decq824] values around [u]int32 edges (zeros done earlier)\",\n          \"canonical_bson\": \"18000000136400FEFFFF7F00000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"2147483646\\\"}}\"\n       },\n       {\n          \"description\": \"[decq825] values around [u]int32 edges (zeros done earlier)\",\n          \"canonical_bson\": \"18000000136400FFFFFF7F00000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"2147483647\\\"}}\"\n       },\n       {\n          \"description\": \"[decq826] values around [u]int32 edges (zeros done earlier)\",\n          \"canonical_bson\": \"180000001364000000008000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"2147483648\\\"}}\"\n       },\n       {\n          \"description\": \"[decq827] values around [u]int32 edges (zeros done earlier)\",\n          \"canonical_bson\": \"180000001364000100008000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"2147483649\\\"}}\"\n       },\n       {\n          \"description\": \"[decq828] values around [u]int32 edges (zeros done earlier)\",\n          \"canonical_bson\": \"18000000136400FEFFFFFF00000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"4294967294\\\"}}\"\n       },\n       {\n          \"description\": \"[decq829] values around [u]int32 edges (zeros done earlier)\",\n          \"canonical_bson\": \"18000000136400FFFFFFFF00000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"4294967295\\\"}}\"\n       },\n       {\n          \"description\": \"[decq830] values around [u]int32 edges (zeros done earlier)\",\n          \"canonical_bson\": \"180000001364000000000001000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"4294967296\\\"}}\"\n       },\n       {\n          \"description\": \"[decq831] values around [u]int32 edges (zeros done earlier)\",\n          \"canonical_bson\": \"180000001364000100000001000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"4294967297\\\"}}\"\n       },\n       {\n          \"description\": \"[decq022] Normality\",\n          \"canonical_bson\": \"18000000136400C7711CC7B548F377DC80A131C836403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1111111111111111111111111111111111\\\"}}\"\n       },\n       {\n          \"description\": \"[decq020] Normality\",\n          \"canonical_bson\": \"18000000136400F2AF967ED05C82DE3297FF6FDE3C403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1234567890123456789012345678901234\\\"}}\"\n       },\n       {\n          \"description\": \"[decq550] Specials\",\n          \"canonical_bson\": \"18000000136400FFFFFFFF638E8D37C087ADBE09ED413000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"9999999999999999999999999999999999\\\"}}\"\n       }\n    ]\n}\n\n","{\n    \"description\": \"Decimal128\",\n    \"bson_type\": \"0x13\",\n    \"test_key\": \"d\",\n    \"valid\": [\n       {\n          \"description\": \"[basx066] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"18000000136400185C0ACE0000000000000000000038B000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-00345678.5432\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-345678.5432\\\"}}\"\n       },\n       {\n          \"description\": \"[basx065] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"18000000136400185C0ACE0000000000000000000038B000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0345678.5432\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-345678.5432\\\"}}\"\n       },\n       {\n          \"description\": \"[basx064] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"18000000136400185C0ACE0000000000000000000038B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-345678.5432\\\"}}\"\n       },\n       {\n          \"description\": \"[basx041] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"180000001364004C0000000000000000000000000040B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-76\\\"}}\"\n       },\n       {\n          \"description\": \"[basx027] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"180000001364000F270000000000000000000000003AB000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-9.999\\\"}}\"\n       },\n       {\n          \"description\": \"[basx026] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"180000001364009F230000000000000000000000003AB000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-9.119\\\"}}\"\n       },\n       {\n          \"description\": \"[basx025] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"180000001364008F030000000000000000000000003CB000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-9.11\\\"}}\"\n       },\n       {\n          \"description\": \"[basx024] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"180000001364005B000000000000000000000000003EB000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-9.1\\\"}}\"\n       },\n       {\n          \"description\": \"[dqbsr531] negatives (Rounded)\",\n          \"canonical_bson\": \"1800000013640099761CC7B548F377DC80A131C836FEAF00\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1.1111111111111111111111111111123450\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1.111111111111111111111111111112345\\\"}}\"\n       },\n       {\n          \"description\": \"[basx022] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"180000001364000A000000000000000000000000003EB000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1.0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx021] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"18000000136400010000000000000000000000000040B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1\\\"}}\"\n       },\n       {\n          \"description\": \"[basx601] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000002E3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.000000000\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E-9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx622] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000002EB000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.000000000\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0E-9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx602] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000303000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00000000\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E-8\\\"}}\"\n       },\n       {\n          \"description\": \"[basx621] Zeros\",\n          \"canonical_bson\": \"18000000136400000000000000000000000000000030B000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.00000000\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0E-8\\\"}}\"\n       },\n       {\n          \"description\": \"[basx603] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000323000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0000000\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E-7\\\"}}\"\n       },\n       {\n          \"description\": \"[basx620] Zeros\",\n          \"canonical_bson\": \"18000000136400000000000000000000000000000032B000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.0000000\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0E-7\\\"}}\"\n       },\n       {\n          \"description\": \"[basx604] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000343000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.000000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx619] Zeros\",\n          \"canonical_bson\": \"18000000136400000000000000000000000000000034B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.000000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx605] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000363000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx618] Zeros\",\n          \"canonical_bson\": \"18000000136400000000000000000000000000000036B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.00000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx680] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000403000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"000000.\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx606] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000383000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx617] Zeros\",\n          \"canonical_bson\": \"18000000136400000000000000000000000000000038B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.0000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx681] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000403000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"00000.\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx686] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000403000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"+00000.\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx687] Zeros\",\n          \"canonical_bson\": \"18000000136400000000000000000000000000000040B000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-00000.\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx019] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003CB000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-00.00\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.00\\\"}}\"\n       },\n       {\n          \"description\": \"[basx607] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003A3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx616] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003AB000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx682] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000403000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0000.\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx155] Numbers with E\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003A3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.000e+0\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx130] Numbers with E\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000383000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.000E-1\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx290] some more negative zeros [systematic tests below]\",\n          \"canonical_bson\": \"18000000136400000000000000000000000000000038B000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.000E-1\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.0000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx131] Numbers with E\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000363000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.000E-2\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx291] some more negative zeros [systematic tests below]\",\n          \"canonical_bson\": \"18000000136400000000000000000000000000000036B000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.000E-2\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.00000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx132] Numbers with E\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000343000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.000E-3\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.000000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx292] some more negative zeros [systematic tests below]\",\n          \"canonical_bson\": \"18000000136400000000000000000000000000000034B000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.000E-3\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.000000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx133] Numbers with E\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000323000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.000E-4\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E-7\\\"}}\"\n       },\n       {\n          \"description\": \"[basx293] some more negative zeros [systematic tests below]\",\n          \"canonical_bson\": \"18000000136400000000000000000000000000000032B000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.000E-4\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0E-7\\\"}}\"\n       },\n       {\n          \"description\": \"[basx608] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003C3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00\\\"}}\"\n       },\n       {\n          \"description\": \"[basx615] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003CB000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.00\\\"}}\"\n       },\n       {\n          \"description\": \"[basx683] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000403000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"000.\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx630] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003C3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00E+0\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00\\\"}}\"\n       },\n       {\n          \"description\": \"[basx670] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003C3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00E-0\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00\\\"}}\"\n       },\n       {\n          \"description\": \"[basx631] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003E3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00E+1\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx671] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003A3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00E-1\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx134] Numbers with E\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000383000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00E-2\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx294] some more negative zeros [systematic tests below]\",\n          \"canonical_bson\": \"18000000136400000000000000000000000000000038B000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.00E-2\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.0000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx632] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000403000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00E+2\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx672] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000383000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00E-2\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx135] Numbers with E\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000363000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00E-3\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx295] some more negative zeros [systematic tests below]\",\n          \"canonical_bson\": \"18000000136400000000000000000000000000000036B000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.00E-3\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.00000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx633] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000423000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00E+3\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+1\\\"}}\"\n       },\n       {\n          \"description\": \"[basx673] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000363000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00E-3\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx136] Numbers with E\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000343000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00E-4\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.000000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx674] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000343000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00E-4\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.000000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx634] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000443000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00E+4\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+2\\\"}}\"\n       },\n       {\n          \"description\": \"[basx137] Numbers with E\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000323000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00E-5\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E-7\\\"}}\"\n       },\n       {\n          \"description\": \"[basx635] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000463000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00E+5\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+3\\\"}}\"\n       },\n       {\n          \"description\": \"[basx675] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000323000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00E-5\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E-7\\\"}}\"\n       },\n       {\n          \"description\": \"[basx636] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000483000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00E+6\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+4\\\"}}\"\n       },\n       {\n          \"description\": \"[basx676] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000303000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00E-6\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E-8\\\"}}\"\n       },\n       {\n          \"description\": \"[basx637] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000004A3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00E+7\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+5\\\"}}\"\n       },\n       {\n          \"description\": \"[basx677] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000002E3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00E-7\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E-9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx638] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000004C3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00E+8\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+6\\\"}}\"\n       },\n       {\n          \"description\": \"[basx678] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000002C3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00E-8\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E-10\\\"}}\"\n       },\n       {\n          \"description\": \"[basx149] Numbers with E\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000523000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"000E+9\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx639] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000004E3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00E+9\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+7\\\"}}\"\n       },\n       {\n          \"description\": \"[basx679] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000002A3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00E-9\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E-11\\\"}}\"\n       },\n       {\n          \"description\": \"[basx063] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"18000000136400185C0ACE00000000000000000000383000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"+00345678.5432\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"345678.5432\\\"}}\"\n       },\n       {\n          \"description\": \"[basx018] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003EB000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx609] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003E3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx614] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003EB000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx684] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000403000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"00.\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx640] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003E3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0E+0\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx660] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003E3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0E-0\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx641] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000403000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0E+1\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx661] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003C3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0E-1\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00\\\"}}\"\n       },\n       {\n          \"description\": \"[basx296] some more negative zeros [systematic tests below]\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003AB000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.0E-2\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx642] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000423000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0E+2\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+1\\\"}}\"\n       },\n       {\n          \"description\": \"[basx662] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003A3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0E-2\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx297] some more negative zeros [systematic tests below]\",\n          \"canonical_bson\": \"18000000136400000000000000000000000000000038B000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.0E-3\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.0000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx643] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000443000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0E+3\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+2\\\"}}\"\n       },\n       {\n          \"description\": \"[basx663] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000383000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0E-3\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx644] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000463000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0E+4\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+3\\\"}}\"\n       },\n       {\n          \"description\": \"[basx664] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000363000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0E-4\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx645] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000483000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0E+5\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+4\\\"}}\"\n       },\n       {\n          \"description\": \"[basx665] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000343000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0E-5\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.000000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx646] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000004A3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0E+6\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+5\\\"}}\"\n       },\n       {\n          \"description\": \"[basx666] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000323000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0E-6\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E-7\\\"}}\"\n       },\n       {\n          \"description\": \"[basx647] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000004C3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0E+7\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+6\\\"}}\"\n       },\n       {\n          \"description\": \"[basx667] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000303000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0E-7\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E-8\\\"}}\"\n       },\n       {\n          \"description\": \"[basx648] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000004E3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0E+8\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+7\\\"}}\"\n       },\n       {\n          \"description\": \"[basx668] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000002E3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0E-8\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E-9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx160] Numbers with E\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000523000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"00E+9\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx161] Numbers with E\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000002E3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"00E-9\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E-9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx649] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000503000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0E+9\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+8\\\"}}\"\n       },\n       {\n          \"description\": \"[basx669] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000002C3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0E-9\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E-10\\\"}}\"\n       },\n       {\n          \"description\": \"[basx062] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"18000000136400185C0ACE00000000000000000000383000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"+0345678.5432\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"345678.5432\\\"}}\"\n       },\n       {\n          \"description\": \"[basx001] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx017] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"18000000136400000000000000000000000000000040B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx611] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000403000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx613] Zeros\",\n          \"canonical_bson\": \"18000000136400000000000000000000000000000040B000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx685] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000403000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx688] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000403000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"+0.\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx689] Zeros\",\n          \"canonical_bson\": \"18000000136400000000000000000000000000000040B000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx650] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000403000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+0\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx651] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000423000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+1\\\"}}\"\n       },\n       {\n          \"description\": \"[basx298] some more negative zeros [systematic tests below]\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003CB000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0E-2\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.00\\\"}}\"\n       },\n       {\n          \"description\": \"[basx652] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000443000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+2\\\"}}\"\n       },\n       {\n          \"description\": \"[basx299] some more negative zeros [systematic tests below]\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003AB000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0E-3\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx653] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000463000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+3\\\"}}\"\n       },\n       {\n          \"description\": \"[basx654] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000483000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+4\\\"}}\"\n       },\n       {\n          \"description\": \"[basx655] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000004A3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+5\\\"}}\"\n       },\n       {\n          \"description\": \"[basx656] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000004C3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+6\\\"}}\"\n       },\n       {\n          \"description\": \"[basx657] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000004E3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+7\\\"}}\"\n       },\n       {\n          \"description\": \"[basx658] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000503000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+8\\\"}}\"\n       },\n       {\n          \"description\": \"[basx138] Numbers with E\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000523000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"+0E+9\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx139] Numbers with E\",\n          \"canonical_bson\": \"18000000136400000000000000000000000000000052B000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0E+9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx144] Numbers with E\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000523000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx154] Numbers with E\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000523000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E9\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx659] Zeros\",\n          \"canonical_bson\": \"180000001364000000000000000000000000000000523000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx042] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"18000000136400FC040000000000000000000000003C3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"+12.76\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12.76\\\"}}\"\n       },\n       {\n          \"description\": \"[basx143] Numbers with E\",\n          \"canonical_bson\": \"180000001364000100000000000000000000000000523000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"+1E+009\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx061] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"18000000136400185C0ACE00000000000000000000383000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"+345678.5432\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"345678.5432\\\"}}\"\n       },\n       {\n          \"description\": \"[basx036] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"1800000013640015CD5B0700000000000000000000203000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0000000123456789\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.23456789E-8\\\"}}\"\n       },\n       {\n          \"description\": \"[basx035] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"1800000013640015CD5B0700000000000000000000223000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.000000123456789\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.23456789E-7\\\"}}\"\n       },\n       {\n          \"description\": \"[basx034] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"1800000013640015CD5B0700000000000000000000243000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00000123456789\\\"}}\"\n       },\n       {\n          \"description\": \"[basx053] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"180000001364003200000000000000000000000000323000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0000050\\\"}}\"\n       },\n       {\n          \"description\": \"[basx033] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"1800000013640015CD5B0700000000000000000000263000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0000123456789\\\"}}\"\n       },\n       {\n          \"description\": \"[basx016] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"180000001364000C000000000000000000000000003A3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.012\\\"}}\"\n       },\n       {\n          \"description\": \"[basx015] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"180000001364007B000000000000000000000000003A3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.123\\\"}}\"\n       },\n       {\n          \"description\": \"[basx037] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"1800000013640078DF0D8648700000000000000000223000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.123456789012344\\\"}}\"\n       },\n       {\n          \"description\": \"[basx038] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"1800000013640079DF0D8648700000000000000000223000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.123456789012345\\\"}}\"\n       },\n       {\n          \"description\": \"[basx250] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000383000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.1265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx257] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000383000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.1265E-0\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.1265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx256] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000363000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.1265E-1\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.01265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx258] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F1040000000000000000000000003A3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.1265E+1\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx251] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000103000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.1265E-20\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E-21\\\"}}\"\n       },\n       {\n          \"description\": \"[basx263] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000603000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.1265E+20\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E+19\\\"}}\"\n       },\n       {\n          \"description\": \"[basx255] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000343000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.1265E-2\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.001265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx259] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F1040000000000000000000000003C3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.1265E+2\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12.65\\\"}}\"\n       },\n       {\n          \"description\": \"[basx254] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000323000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.1265E-3\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0001265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx260] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F1040000000000000000000000003E3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.1265E+3\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"126.5\\\"}}\"\n       },\n       {\n          \"description\": \"[basx253] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000303000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.1265E-4\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00001265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx261] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000403000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.1265E+4\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx252] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000283000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.1265E-8\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E-9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx262] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000483000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.1265E+8\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E+7\\\"}}\"\n       },\n       {\n          \"description\": \"[basx159] Numbers with E\",\n          \"canonical_bson\": \"1800000013640049000000000000000000000000002E3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.73e-7\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7.3E-8\\\"}}\"\n       },\n       {\n          \"description\": \"[basx004] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"1800000013640064000000000000000000000000003C3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00\\\"}}\"\n       },\n       {\n          \"description\": \"[basx003] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"180000001364000A000000000000000000000000003E3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx002] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"180000001364000100000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1\\\"}}\"\n       },\n       {\n          \"description\": \"[basx148] Numbers with E\",\n          \"canonical_bson\": \"180000001364000100000000000000000000000000523000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+009\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx153] Numbers with E\",\n          \"canonical_bson\": \"180000001364000100000000000000000000000000523000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E009\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx141] Numbers with E\",\n          \"canonical_bson\": \"180000001364000100000000000000000000000000523000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1e+09\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx146] Numbers with E\",\n          \"canonical_bson\": \"180000001364000100000000000000000000000000523000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+09\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx151] Numbers with E\",\n          \"canonical_bson\": \"180000001364000100000000000000000000000000523000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1e09\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx142] Numbers with E\",\n          \"canonical_bson\": \"180000001364000100000000000000000000000000F43000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+90\\\"}}\"\n       },\n       {\n          \"description\": \"[basx147] Numbers with E\",\n          \"canonical_bson\": \"180000001364000100000000000000000000000000F43000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1e+90\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+90\\\"}}\"\n       },\n       {\n          \"description\": \"[basx152] Numbers with E\",\n          \"canonical_bson\": \"180000001364000100000000000000000000000000F43000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E90\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+90\\\"}}\"\n       },\n       {\n          \"description\": \"[basx140] Numbers with E\",\n          \"canonical_bson\": \"180000001364000100000000000000000000000000523000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx150] Numbers with E\",\n          \"canonical_bson\": \"180000001364000100000000000000000000000000523000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E9\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx014] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"18000000136400D2040000000000000000000000003A3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.234\\\"}}\"\n       },\n       {\n          \"description\": \"[basx170] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F1040000000000000000000000003A3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx177] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F1040000000000000000000000003A3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E-0\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx176] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000383000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E-1\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.1265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx178] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F1040000000000000000000000003C3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E+1\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12.65\\\"}}\"\n       },\n       {\n          \"description\": \"[basx171] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000123000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E-20\\\"}}\"\n       },\n       {\n          \"description\": \"[basx183] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000623000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E+20\\\"}}\"\n       },\n       {\n          \"description\": \"[basx175] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000363000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E-2\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.01265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx179] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F1040000000000000000000000003E3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E+2\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"126.5\\\"}}\"\n       },\n       {\n          \"description\": \"[basx174] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000343000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E-3\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.001265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx180] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000403000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E+3\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx173] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000323000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E-4\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0001265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx181] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000423000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E+4\\\"}}\"\n       },\n       {\n          \"description\": \"[basx172] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F1040000000000000000000000002A3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E-8\\\"}}\"\n       },\n       {\n          \"description\": \"[basx182] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F1040000000000000000000000004A3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E+8\\\"}}\"\n       },\n       {\n          \"description\": \"[basx157] Numbers with E\",\n          \"canonical_bson\": \"180000001364000400000000000000000000000000523000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"4E+9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx067] examples\",\n          \"canonical_bson\": \"180000001364000500000000000000000000000000343000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"5E-6\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.000005\\\"}}\"\n       },\n       {\n          \"description\": \"[basx069] examples\",\n          \"canonical_bson\": \"180000001364000500000000000000000000000000323000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"5E-7\\\"}}\"\n       },\n       {\n          \"description\": \"[basx385] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000700000000000000000000000000403000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E0\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7\\\"}}\"\n       },\n       {\n          \"description\": \"[basx365] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000700000000000000000000000000543000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E10\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E+10\\\"}}\"\n       },\n       {\n          \"description\": \"[basx405] Engineering notation tests\",\n          \"canonical_bson\": \"1800000013640007000000000000000000000000002C3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E-10\\\"}}\"\n       },\n       {\n          \"description\": \"[basx363] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000700000000000000000000000000563000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E11\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E+11\\\"}}\"\n       },\n       {\n          \"description\": \"[basx407] Engineering notation tests\",\n          \"canonical_bson\": \"1800000013640007000000000000000000000000002A3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E-11\\\"}}\"\n       },\n       {\n          \"description\": \"[basx361] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000700000000000000000000000000583000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E12\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E+12\\\"}}\"\n       },\n       {\n          \"description\": \"[basx409] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000700000000000000000000000000283000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E-12\\\"}}\"\n       },\n       {\n          \"description\": \"[basx411] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000700000000000000000000000000263000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E-13\\\"}}\"\n       },\n       {\n          \"description\": \"[basx383] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000700000000000000000000000000423000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E1\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E+1\\\"}}\"\n       },\n       {\n          \"description\": \"[basx387] Engineering notation tests\",\n          \"canonical_bson\": \"1800000013640007000000000000000000000000003E3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E-1\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.7\\\"}}\"\n       },\n       {\n          \"description\": \"[basx381] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000700000000000000000000000000443000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E2\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E+2\\\"}}\"\n       },\n       {\n          \"description\": \"[basx389] Engineering notation tests\",\n          \"canonical_bson\": \"1800000013640007000000000000000000000000003C3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E-2\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.07\\\"}}\"\n       },\n       {\n          \"description\": \"[basx379] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000700000000000000000000000000463000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E3\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E+3\\\"}}\"\n       },\n       {\n          \"description\": \"[basx391] Engineering notation tests\",\n          \"canonical_bson\": \"1800000013640007000000000000000000000000003A3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E-3\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.007\\\"}}\"\n       },\n       {\n          \"description\": \"[basx377] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000700000000000000000000000000483000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E4\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E+4\\\"}}\"\n       },\n       {\n          \"description\": \"[basx393] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000700000000000000000000000000383000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E-4\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0007\\\"}}\"\n       },\n       {\n          \"description\": \"[basx375] Engineering notation tests\",\n          \"canonical_bson\": \"1800000013640007000000000000000000000000004A3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E5\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E+5\\\"}}\"\n       },\n       {\n          \"description\": \"[basx395] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000700000000000000000000000000363000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E-5\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00007\\\"}}\"\n       },\n       {\n          \"description\": \"[basx373] Engineering notation tests\",\n          \"canonical_bson\": \"1800000013640007000000000000000000000000004C3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E6\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E+6\\\"}}\"\n       },\n       {\n          \"description\": \"[basx397] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000700000000000000000000000000343000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E-6\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.000007\\\"}}\"\n       },\n       {\n          \"description\": \"[basx371] Engineering notation tests\",\n          \"canonical_bson\": \"1800000013640007000000000000000000000000004E3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E7\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E+7\\\"}}\"\n       },\n       {\n          \"description\": \"[basx399] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000700000000000000000000000000323000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E-7\\\"}}\"\n       },\n       {\n          \"description\": \"[basx369] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000700000000000000000000000000503000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E8\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E+8\\\"}}\"\n       },\n       {\n          \"description\": \"[basx401] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000700000000000000000000000000303000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E-8\\\"}}\"\n       },\n       {\n          \"description\": \"[basx367] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000700000000000000000000000000523000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E9\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E+9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx403] Engineering notation tests\",\n          \"canonical_bson\": \"1800000013640007000000000000000000000000002E3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"7E-9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx007] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"1800000013640064000000000000000000000000003E3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10.0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx005] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"180000001364000A00000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10\\\"}}\"\n       },\n       {\n          \"description\": \"[basx165] Numbers with E\",\n          \"canonical_bson\": \"180000001364000A00000000000000000000000000523000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10E+009\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E+10\\\"}}\"\n       },\n       {\n          \"description\": \"[basx163] Numbers with E\",\n          \"canonical_bson\": \"180000001364000A00000000000000000000000000523000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10E+09\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E+10\\\"}}\"\n       },\n       {\n          \"description\": \"[basx325] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A00000000000000000000000000403000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e0\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10\\\"}}\"\n       },\n       {\n          \"description\": \"[basx305] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A00000000000000000000000000543000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e10\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E+11\\\"}}\"\n       },\n       {\n          \"description\": \"[basx345] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A000000000000000000000000002C3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e-10\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E-9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx303] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A00000000000000000000000000563000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e11\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E+12\\\"}}\"\n       },\n       {\n          \"description\": \"[basx347] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A000000000000000000000000002A3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e-11\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E-10\\\"}}\"\n       },\n       {\n          \"description\": \"[basx301] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A00000000000000000000000000583000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e12\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E+13\\\"}}\"\n       },\n       {\n          \"description\": \"[basx349] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A00000000000000000000000000283000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e-12\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E-11\\\"}}\"\n       },\n       {\n          \"description\": \"[basx351] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A00000000000000000000000000263000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e-13\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E-12\\\"}}\"\n       },\n       {\n          \"description\": \"[basx323] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A00000000000000000000000000423000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e1\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E+2\\\"}}\"\n       },\n       {\n          \"description\": \"[basx327] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A000000000000000000000000003E3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e-1\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx321] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A00000000000000000000000000443000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e2\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E+3\\\"}}\"\n       },\n       {\n          \"description\": \"[basx329] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A000000000000000000000000003C3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e-2\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.10\\\"}}\"\n       },\n       {\n          \"description\": \"[basx319] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A00000000000000000000000000463000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e3\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E+4\\\"}}\"\n       },\n       {\n          \"description\": \"[basx331] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A000000000000000000000000003A3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e-3\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.010\\\"}}\"\n       },\n       {\n          \"description\": \"[basx317] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A00000000000000000000000000483000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e4\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E+5\\\"}}\"\n       },\n       {\n          \"description\": \"[basx333] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A00000000000000000000000000383000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e-4\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0010\\\"}}\"\n       },\n       {\n          \"description\": \"[basx315] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A000000000000000000000000004A3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e5\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E+6\\\"}}\"\n       },\n       {\n          \"description\": \"[basx335] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A00000000000000000000000000363000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e-5\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00010\\\"}}\"\n       },\n       {\n          \"description\": \"[basx313] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A000000000000000000000000004C3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e6\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E+7\\\"}}\"\n       },\n       {\n          \"description\": \"[basx337] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A00000000000000000000000000343000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e-6\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.000010\\\"}}\"\n       },\n       {\n          \"description\": \"[basx311] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A000000000000000000000000004E3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e7\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E+8\\\"}}\"\n       },\n       {\n          \"description\": \"[basx339] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A00000000000000000000000000323000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e-7\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0000010\\\"}}\"\n       },\n       {\n          \"description\": \"[basx309] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A00000000000000000000000000503000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e8\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E+9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx341] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A00000000000000000000000000303000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e-8\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E-7\\\"}}\"\n       },\n       {\n          \"description\": \"[basx164] Numbers with E\",\n          \"canonical_bson\": \"180000001364000A00000000000000000000000000F43000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e+90\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E+91\\\"}}\"\n       },\n       {\n          \"description\": \"[basx162] Numbers with E\",\n          \"canonical_bson\": \"180000001364000A00000000000000000000000000523000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10E+9\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E+10\\\"}}\"\n       },\n       {\n          \"description\": \"[basx307] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A00000000000000000000000000523000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e9\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E+10\\\"}}\"\n       },\n       {\n          \"description\": \"[basx343] Engineering notation tests\",\n          \"canonical_bson\": \"180000001364000A000000000000000000000000002E3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10e-9\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E-8\\\"}}\"\n       },\n       {\n          \"description\": \"[basx008] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"1800000013640065000000000000000000000000003E3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10.1\\\"}}\"\n       },\n       {\n          \"description\": \"[basx009] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"1800000013640068000000000000000000000000003E3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10.4\\\"}}\"\n       },\n       {\n          \"description\": \"[basx010] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"1800000013640069000000000000000000000000003E3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10.5\\\"}}\"\n       },\n       {\n          \"description\": \"[basx011] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"180000001364006A000000000000000000000000003E3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10.6\\\"}}\"\n       },\n       {\n          \"description\": \"[basx012] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"180000001364006D000000000000000000000000003E3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"10.9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx013] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"180000001364006E000000000000000000000000003E3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"11.0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx040] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"180000001364000C00000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12\\\"}}\"\n       },\n       {\n          \"description\": \"[basx190] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F1040000000000000000000000003C3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12.65\\\"}}\"\n       },\n       {\n          \"description\": \"[basx197] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F1040000000000000000000000003C3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12.65E-0\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12.65\\\"}}\"\n       },\n       {\n          \"description\": \"[basx196] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F1040000000000000000000000003A3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12.65E-1\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx198] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F1040000000000000000000000003E3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12.65E+1\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"126.5\\\"}}\"\n       },\n       {\n          \"description\": \"[basx191] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000143000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12.65E-20\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E-19\\\"}}\"\n       },\n       {\n          \"description\": \"[basx203] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000643000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12.65E+20\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E+21\\\"}}\"\n       },\n       {\n          \"description\": \"[basx195] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000383000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12.65E-2\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.1265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx199] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000403000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12.65E+2\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx194] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000363000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12.65E-3\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.01265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx200] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000423000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12.65E+3\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E+4\\\"}}\"\n       },\n       {\n          \"description\": \"[basx193] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000343000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12.65E-4\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.001265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx201] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000443000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12.65E+4\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E+5\\\"}}\"\n       },\n       {\n          \"description\": \"[basx192] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F1040000000000000000000000002C3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12.65E-8\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E-7\\\"}}\"\n       },\n       {\n          \"description\": \"[basx202] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F1040000000000000000000000004C3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12.65E+8\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E+9\\\"}}\"\n       },\n       {\n          \"description\": \"[basx044] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"18000000136400FC040000000000000000000000003C3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"012.76\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12.76\\\"}}\"\n       },\n       {\n          \"description\": \"[basx042] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"18000000136400FC040000000000000000000000003C3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12.76\\\"}}\"\n       },\n       {\n          \"description\": \"[basx046] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"180000001364001100000000000000000000000000403000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"17.\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"17\\\"}}\"\n       },\n       {\n          \"description\": \"[basx049] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"180000001364002C00000000000000000000000000403000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0044\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"44\\\"}}\"\n       },\n       {\n          \"description\": \"[basx048] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"180000001364002C00000000000000000000000000403000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"044\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"44\\\"}}\"\n       },\n       {\n          \"description\": \"[basx158] Numbers with E\",\n          \"canonical_bson\": \"180000001364002C00000000000000000000000000523000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"44E+9\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"4.4E+10\\\"}}\"\n       },\n       {\n          \"description\": \"[basx068] examples\",\n          \"canonical_bson\": \"180000001364003200000000000000000000000000323000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"50E-7\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0000050\\\"}}\"\n       },\n       {\n          \"description\": \"[basx169] Numbers with E\",\n          \"canonical_bson\": \"180000001364006400000000000000000000000000523000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"100e+009\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00E+11\\\"}}\"\n       },\n       {\n          \"description\": \"[basx167] Numbers with E\",\n          \"canonical_bson\": \"180000001364006400000000000000000000000000523000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"100e+09\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00E+11\\\"}}\"\n       },\n       {\n          \"description\": \"[basx168] Numbers with E\",\n          \"canonical_bson\": \"180000001364006400000000000000000000000000F43000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"100E+90\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00E+92\\\"}}\"\n       },\n       {\n          \"description\": \"[basx166] Numbers with E\",\n          \"canonical_bson\": \"180000001364006400000000000000000000000000523000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"100e+9\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00E+11\\\"}}\"\n       },\n       {\n          \"description\": \"[basx210] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F1040000000000000000000000003E3000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"126.5\\\"}}\"\n       },\n       {\n          \"description\": \"[basx217] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F1040000000000000000000000003E3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"126.5E-0\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"126.5\\\"}}\"\n       },\n       {\n          \"description\": \"[basx216] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F1040000000000000000000000003C3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"126.5E-1\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12.65\\\"}}\"\n       },\n       {\n          \"description\": \"[basx218] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000403000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"126.5E+1\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx211] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000163000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"126.5E-20\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E-18\\\"}}\"\n       },\n       {\n          \"description\": \"[basx223] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000663000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"126.5E+20\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E+22\\\"}}\"\n       },\n       {\n          \"description\": \"[basx215] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F1040000000000000000000000003A3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"126.5E-2\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx219] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000423000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"126.5E+2\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E+4\\\"}}\"\n       },\n       {\n          \"description\": \"[basx214] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000383000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"126.5E-3\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.1265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx220] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000443000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"126.5E+3\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E+5\\\"}}\"\n       },\n       {\n          \"description\": \"[basx213] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000363000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"126.5E-4\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.01265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx221] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000463000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"126.5E+4\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E+6\\\"}}\"\n       },\n       {\n          \"description\": \"[basx212] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F1040000000000000000000000002E3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"126.5E-8\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.000001265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx222] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F1040000000000000000000000004E3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"126.5E+8\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E+10\\\"}}\"\n       },\n       {\n          \"description\": \"[basx006] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"18000000136400E803000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx230] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx237] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000403000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1265E-0\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx236] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F1040000000000000000000000003E3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1265E-1\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"126.5\\\"}}\"\n       },\n       {\n          \"description\": \"[basx238] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000423000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1265E+1\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E+4\\\"}}\"\n       },\n       {\n          \"description\": \"[basx231] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000183000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1265E-20\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E-17\\\"}}\"\n       },\n       {\n          \"description\": \"[basx243] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000683000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1265E+20\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E+23\\\"}}\"\n       },\n       {\n          \"description\": \"[basx235] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F1040000000000000000000000003C3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1265E-2\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12.65\\\"}}\"\n       },\n       {\n          \"description\": \"[basx239] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000443000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1265E+2\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E+5\\\"}}\"\n       },\n       {\n          \"description\": \"[basx234] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F1040000000000000000000000003A3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1265E-3\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx240] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000463000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1265E+3\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E+6\\\"}}\"\n       },\n       {\n          \"description\": \"[basx233] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000383000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1265E-4\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.1265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx241] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000483000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1265E+4\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E+7\\\"}}\"\n       },\n       {\n          \"description\": \"[basx232] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000303000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1265E-8\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00001265\\\"}}\"\n       },\n       {\n          \"description\": \"[basx242] Numbers with E\",\n          \"canonical_bson\": \"18000000136400F104000000000000000000000000503000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1265E+8\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.265E+11\\\"}}\"\n       },\n       {\n          \"description\": \"[basx060] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"18000000136400185C0ACE00000000000000000000383000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"345678.5432\\\"}}\"\n       },\n       {\n          \"description\": \"[basx059] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"18000000136400F198670C08000000000000000000363000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0345678.54321\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"345678.54321\\\"}}\"\n       },\n       {\n          \"description\": \"[basx058] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"180000001364006AF90B7C50000000000000000000343000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"345678.543210\\\"}}\"\n       },\n       {\n          \"description\": \"[basx057] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"180000001364006A19562522020000000000000000343000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"2345678.543210\\\"}}\"\n       },\n       {\n          \"description\": \"[basx056] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"180000001364006AB9C8733A0B0000000000000000343000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12345678.543210\\\"}}\"\n       },\n       {\n          \"description\": \"[basx031] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"1800000013640040AF0D8648700000000000000000343000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"123456789.000000\\\"}}\"\n       },\n       {\n          \"description\": \"[basx030] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"1800000013640080910F8648700000000000000000343000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"123456789.123456\\\"}}\"\n       },\n       {\n          \"description\": \"[basx032] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"1800000013640080910F8648700000000000000000403000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"123456789123456\\\"}}\"\n       }\n    ]\n}\n","{\n    \"description\": \"Decimal128\",\n    \"bson_type\": \"0x13\",\n    \"test_key\": \"d\",\n    \"valid\": [\n       {\n          \"description\": \"[basx023] conform to rules and exponent will be in permitted range).\",\n          \"canonical_bson\": \"1800000013640001000000000000000000000000003EB000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.1\\\"}}\"\n       },\n\n       {\n          \"description\": \"[basx045] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"1800000013640003000000000000000000000000003A3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"+0.003\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.003\\\"}}\"\n       },\n       {\n          \"description\": \"[basx610] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003E3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\".0\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx612] Zeros\",\n          \"canonical_bson\": \"1800000013640000000000000000000000000000003EB000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-.0\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.0\\\"}}\"\n       },\n       {\n          \"description\": \"[basx043] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"18000000136400FC040000000000000000000000003C3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"+12.76\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"12.76\\\"}}\"\n       },\n       {\n          \"description\": \"[basx055] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"180000001364000500000000000000000000000000303000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00000005\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"5E-8\\\"}}\"\n       },\n       {\n          \"description\": \"[basx054] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"180000001364000500000000000000000000000000323000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0000005\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"5E-7\\\"}}\"\n       },\n       {\n          \"description\": \"[basx052] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"180000001364000500000000000000000000000000343000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.000005\\\"}}\"\n       },\n       {\n          \"description\": \"[basx051] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"180000001364000500000000000000000000000000363000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"00.00005\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00005\\\"}}\"\n       },\n       {\n          \"description\": \"[basx050] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"180000001364000500000000000000000000000000383000\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.0005\\\"}}\"\n       },\n       {\n          \"description\": \"[basx047] strings without E cannot generate E in result\",\n          \"canonical_bson\": \"1800000013640005000000000000000000000000003E3000\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\".5\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.5\\\"}}\"\n       },\n       {\n          \"description\": \"[dqbsr431] check rounding modes heeded (Rounded)\",\n          \"canonical_bson\": \"1800000013640099761CC7B548F377DC80A131C836FE2F00\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.1111111111111111111111111111123450\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.111111111111111111111111111112345\\\"}}\"\n       },\n       {\n          \"description\": \"OK2\",\n          \"canonical_bson\": \"18000000136400000000000A5BC138938D44C64D31FC2F00\",\n          \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\".100000000000000000000000000000000000000000000000000000000000\\\"}}\",\n          \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.1000000000000000000000000000000000\\\"}}\"\n       }\n    ],\n    \"parseErrors\": [\n       {\n          \"description\": \"[basx564] Near-specials (Conversion_syntax)\",\n          \"string\": \"Infi\"\n       },\n       {\n          \"description\": \"[basx565] Near-specials (Conversion_syntax)\",\n          \"string\": \"Infin\"\n       },\n       {\n          \"description\": \"[basx566] Near-specials (Conversion_syntax)\",\n          \"string\": \"Infini\"\n       },\n       {\n          \"description\": \"[basx567] Near-specials (Conversion_syntax)\",\n          \"string\": \"Infinit\"\n       },\n       {\n          \"description\": \"[basx568] Near-specials (Conversion_syntax)\",\n          \"string\": \"-Infinit\"\n       },\n       {\n          \"description\": \"[basx590] some baddies with dots and Es and dots and specials (Conversion_syntax)\",\n          \"string\": \".Infinity\"\n       },\n       {\n          \"description\": \"[basx562] Near-specials (Conversion_syntax)\",\n          \"string\": \"NaNq\"\n       },\n       {\n          \"description\": \"[basx563] Near-specials (Conversion_syntax)\",\n          \"string\": \"NaNs\"\n       },\n       {\n          \"description\": \"[dqbas939] overflow results at different rounding modes (Overflow & Inexact & Rounded)\",\n          \"string\": \"-7e10000\"\n       },\n       {\n          \"description\": \"[dqbsr534] negatives (Rounded & Inexact)\",\n          \"string\": \"-1.11111111111111111111111111111234650\"\n       },\n       {\n          \"description\": \"[dqbsr535] negatives (Rounded & Inexact)\",\n          \"string\": \"-1.11111111111111111111111111111234551\"\n       },\n       {\n          \"description\": \"[dqbsr533] negatives (Rounded & Inexact)\",\n          \"string\": \"-1.11111111111111111111111111111234550\"\n       },\n       {\n          \"description\": \"[dqbsr532] negatives (Rounded & Inexact)\",\n          \"string\": \"-1.11111111111111111111111111111234549\"\n       },\n       {\n          \"description\": \"[dqbsr432] check rounding modes heeded (Rounded & Inexact)\",\n          \"string\": \"1.11111111111111111111111111111234549\"\n       },\n       {\n          \"description\": \"[dqbsr433] check rounding modes heeded (Rounded & Inexact)\",\n          \"string\": \"1.11111111111111111111111111111234550\"\n       },\n       {\n          \"description\": \"[dqbsr435] check rounding modes heeded (Rounded & Inexact)\",\n          \"string\": \"1.11111111111111111111111111111234551\"\n       },\n       {\n          \"description\": \"[dqbsr434] check rounding modes heeded (Rounded & Inexact)\",\n          \"string\": \"1.11111111111111111111111111111234650\"\n       },\n       {\n          \"description\": \"[dqbas938] overflow results at different rounding modes (Overflow & Inexact & Rounded)\",\n          \"string\": \"7e10000\"\n       },\n       {\n          \"description\": \"Inexact rounding#1\",\n          \"string\": \"100000000000000000000000000000000000000000000000000000000001\"\n       },\n       {\n          \"description\": \"Inexact rounding#2\",\n          \"string\": \"1E-6177\"\n       }\n    ]\n}\n","{\n    \"description\": \"Decimal128\",\n    \"bson_type\": \"0x13\",\n    \"test_key\": \"d\",\n    \"valid\": [\n        {\n            \"description\": \"[decq035] fold-downs (more below) (Clamped)\",\n            \"canonical_bson\": \"18000000136400000000807F1BCF85B27059C8A43CFE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.23E+6144\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.230000000000000000000000000000000E+6144\\\"}}\"\n        },\n        {\n            \"description\": \"[decq037] fold-downs (more below) (Clamped)\",\n            \"canonical_bson\": \"18000000136400000000000A5BC138938D44C64D31FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6144\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000000000000000000000000000000E+6144\\\"}}\"\n        },\n        {\n            \"description\": \"[decq077] Nmin and below (Subnormal)\",\n            \"canonical_bson\": \"180000001364000000000081EFAC855B416D2DEE04000000\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.100000000000000000000000000000000E-6143\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00000000000000000000000000000000E-6144\\\"}}\"\n        },\n        {\n            \"description\": \"[decq078] Nmin and below (Subnormal)\",\n            \"canonical_bson\": \"180000001364000000000081EFAC855B416D2DEE04000000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00000000000000000000000000000000E-6144\\\"}}\"\n        },\n        {\n            \"description\": \"[decq079] Nmin and below (Subnormal)\",\n            \"canonical_bson\": \"180000001364000A00000000000000000000000000000000\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.000000000000000000000000000000010E-6143\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E-6175\\\"}}\"\n        },\n        {\n            \"description\": \"[decq080] Nmin and below (Subnormal)\",\n            \"canonical_bson\": \"180000001364000A00000000000000000000000000000000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E-6175\\\"}}\"\n        },\n        {\n            \"description\": \"[decq081] Nmin and below (Subnormal)\",\n            \"canonical_bson\": \"180000001364000100000000000000000000000000020000\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.00000000000000000000000000000001E-6143\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E-6175\\\"}}\"\n        },\n        {\n            \"description\": \"[decq082] Nmin and below (Subnormal)\",\n            \"canonical_bson\": \"180000001364000100000000000000000000000000020000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E-6175\\\"}}\"\n        },\n        {\n            \"description\": \"[decq083] Nmin and below (Subnormal)\",\n            \"canonical_bson\": \"180000001364000100000000000000000000000000000000\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0.000000000000000000000000000000001E-6143\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E-6176\\\"}}\"\n        },\n        {\n            \"description\": \"[decq084] Nmin and below (Subnormal)\",\n            \"canonical_bson\": \"180000001364000100000000000000000000000000000000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E-6176\\\"}}\"\n        },\n        {\n            \"description\": \"[decq090] underflows cannot be tested for simple copies, check edge cases (Subnormal)\",\n            \"canonical_bson\": \"180000001364000100000000000000000000000000000000\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1e-6176\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E-6176\\\"}}\"\n        },\n        {\n            \"description\": \"[decq100] underflows cannot be tested for simple copies, check edge cases (Subnormal)\",\n            \"canonical_bson\": \"18000000136400FFFFFFFF095BC138938D44C64D31000000\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"999999999999999999999999999999999e-6176\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"9.99999999999999999999999999999999E-6144\\\"}}\"\n        },\n        {\n            \"description\": \"[decq130] fold-downs (more below) (Clamped)\",\n            \"canonical_bson\": \"18000000136400000000807F1BCF85B27059C8A43CFEDF00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1.23E+6144\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1.230000000000000000000000000000000E+6144\\\"}}\"\n        },\n        {\n            \"description\": \"[decq132] fold-downs (more below) (Clamped)\",\n            \"canonical_bson\": \"18000000136400000000000A5BC138938D44C64D31FEDF00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1E+6144\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1.000000000000000000000000000000000E+6144\\\"}}\"\n        },\n        {\n            \"description\": \"[decq177] Nmin and below (Subnormal)\",\n            \"canonical_bson\": \"180000001364000000000081EFAC855B416D2DEE04008000\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.100000000000000000000000000000000E-6143\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1.00000000000000000000000000000000E-6144\\\"}}\"\n        },\n        {\n            \"description\": \"[decq178] Nmin and below (Subnormal)\",\n            \"canonical_bson\": \"180000001364000000000081EFAC855B416D2DEE04008000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1.00000000000000000000000000000000E-6144\\\"}}\"\n        },\n        {\n            \"description\": \"[decq179] Nmin and below (Subnormal)\",\n            \"canonical_bson\": \"180000001364000A00000000000000000000000000008000\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.000000000000000000000000000000010E-6143\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1.0E-6175\\\"}}\"\n        },\n        {\n            \"description\": \"[decq180] Nmin and below (Subnormal)\",\n            \"canonical_bson\": \"180000001364000A00000000000000000000000000008000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1.0E-6175\\\"}}\"\n        },\n        {\n            \"description\": \"[decq181] Nmin and below (Subnormal)\",\n            \"canonical_bson\": \"180000001364000100000000000000000000000000028000\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.00000000000000000000000000000001E-6143\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1E-6175\\\"}}\"\n        },\n        {\n            \"description\": \"[decq182] Nmin and below (Subnormal)\",\n            \"canonical_bson\": \"180000001364000100000000000000000000000000028000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1E-6175\\\"}}\"\n        },\n        {\n            \"description\": \"[decq183] Nmin and below (Subnormal)\",\n            \"canonical_bson\": \"180000001364000100000000000000000000000000008000\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0.000000000000000000000000000000001E-6143\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1E-6176\\\"}}\"\n        },\n        {\n            \"description\": \"[decq184] Nmin and below (Subnormal)\",\n            \"canonical_bson\": \"180000001364000100000000000000000000000000008000\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1E-6176\\\"}}\"\n        },\n        {\n            \"description\": \"[decq190] underflow edge cases (Subnormal)\",\n            \"canonical_bson\": \"180000001364000100000000000000000000000000008000\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1e-6176\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-1E-6176\\\"}}\"\n        },\n        {\n            \"description\": \"[decq200] underflow edge cases (Subnormal)\",\n            \"canonical_bson\": \"18000000136400FFFFFFFF095BC138938D44C64D31008000\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-999999999999999999999999999999999e-6176\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-9.99999999999999999999999999999999E-6144\\\"}}\"\n        },\n        {\n            \"description\": \"[decq400] zeros (Clamped)\",\n            \"canonical_bson\": \"180000001364000000000000000000000000000000000000\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E-8000\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E-6176\\\"}}\"\n        },\n        {\n            \"description\": \"[decq401] zeros (Clamped)\",\n            \"canonical_bson\": \"180000001364000000000000000000000000000000000000\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E-6177\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E-6176\\\"}}\"\n        },\n        {\n            \"description\": \"[decq414] clamped zeros... (Clamped)\",\n            \"canonical_bson\": \"180000001364000000000000000000000000000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+6112\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+6111\\\"}}\"\n        },\n        {\n            \"description\": \"[decq416] clamped zeros... (Clamped)\",\n            \"canonical_bson\": \"180000001364000000000000000000000000000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+6144\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+6111\\\"}}\"\n        },\n        {\n            \"description\": \"[decq418] clamped zeros... (Clamped)\",\n            \"canonical_bson\": \"180000001364000000000000000000000000000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+8000\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"0E+6111\\\"}}\"\n        },\n        {\n            \"description\": \"[decq420] negative zeros (Clamped)\",\n            \"canonical_bson\": \"180000001364000000000000000000000000000000008000\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0E-8000\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0E-6176\\\"}}\"\n        },\n        {\n            \"description\": \"[decq421] negative zeros (Clamped)\",\n            \"canonical_bson\": \"180000001364000000000000000000000000000000008000\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0E-6177\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0E-6176\\\"}}\"\n        },\n        {\n            \"description\": \"[decq434] clamped zeros... (Clamped)\",\n            \"canonical_bson\": \"180000001364000000000000000000000000000000FEDF00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0E+6112\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0E+6111\\\"}}\"\n        },\n        {\n            \"description\": \"[decq436] clamped zeros... (Clamped)\",\n            \"canonical_bson\": \"180000001364000000000000000000000000000000FEDF00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0E+6144\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0E+6111\\\"}}\"\n        },\n        {\n            \"description\": \"[decq438] clamped zeros... (Clamped)\",\n            \"canonical_bson\": \"180000001364000000000000000000000000000000FEDF00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0E+8000\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"-0E+6111\\\"}}\"\n        },\n        {\n            \"description\": \"[decq601] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"18000000136400000000000A5BC138938D44C64D31FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6144\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000000000000000000000000000000E+6144\\\"}}\"\n        },\n        {\n            \"description\": \"[decq603] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"180000001364000000000081EFAC855B416D2DEE04FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6143\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00000000000000000000000000000000E+6143\\\"}}\"\n        },\n        {\n            \"description\": \"[decq605] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"1800000013640000000080264B91C02220BE377E00FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6142\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0000000000000000000000000000000E+6142\\\"}}\"\n        },\n        {\n            \"description\": \"[decq607] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"1800000013640000000040EAED7446D09C2C9F0C00FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6141\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000000000000000000000000000E+6141\\\"}}\"\n        },\n        {\n            \"description\": \"[decq609] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"18000000136400000000A0CA17726DAE0F1E430100FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6140\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00000000000000000000000000000E+6140\\\"}}\"\n        },\n        {\n            \"description\": \"[decq611] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"18000000136400000000106102253E5ECE4F200000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6139\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0000000000000000000000000000E+6139\\\"}}\"\n        },\n        {\n            \"description\": \"[decq613] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"18000000136400000000E83C80D09F3C2E3B030000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6138\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000000000000000000000000E+6138\\\"}}\"\n        },\n        {\n            \"description\": \"[decq615] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"18000000136400000000E4D20CC8DCD2B752000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6137\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00000000000000000000000000E+6137\\\"}}\"\n        },\n        {\n            \"description\": \"[decq617] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"180000001364000000004A48011416954508000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6136\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0000000000000000000000000E+6136\\\"}}\"\n        },\n        {\n            \"description\": \"[decq619] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"18000000136400000000A1EDCCCE1BC2D300000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6135\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000000000000000000000E+6135\\\"}}\"\n        },\n        {\n            \"description\": \"[decq621] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"18000000136400000080F64AE1C7022D1500000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6134\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00000000000000000000000E+6134\\\"}}\"\n        },\n        {\n            \"description\": \"[decq623] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"18000000136400000040B2BAC9E0191E0200000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6133\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0000000000000000000000E+6133\\\"}}\"\n        },\n        {\n            \"description\": \"[decq625] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"180000001364000000A0DEC5ADC935360000000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6132\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000000000000000000E+6132\\\"}}\"\n        },\n        {\n            \"description\": \"[decq627] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"18000000136400000010632D5EC76B050000000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6131\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00000000000000000000E+6131\\\"}}\"\n        },\n        {\n            \"description\": \"[decq629] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"180000001364000000E8890423C78A000000000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6130\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0000000000000000000E+6130\\\"}}\"\n        },\n        {\n            \"description\": \"[decq631] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"18000000136400000064A7B3B6E00D000000000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6129\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000000000000000E+6129\\\"}}\"\n        },\n        {\n            \"description\": \"[decq633] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"1800000013640000008A5D78456301000000000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6128\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00000000000000000E+6128\\\"}}\"\n        },\n        {\n            \"description\": \"[decq635] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"180000001364000000C16FF2862300000000000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6127\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0000000000000000E+6127\\\"}}\"\n        },\n        {\n            \"description\": \"[decq637] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"180000001364000080C6A47E8D0300000000000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6126\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000000000000E+6126\\\"}}\"\n        },\n        {\n            \"description\": \"[decq639] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"1800000013640000407A10F35A0000000000000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6125\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00000000000000E+6125\\\"}}\"\n        },\n        {\n            \"description\": \"[decq641] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"1800000013640000A0724E18090000000000000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6124\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0000000000000E+6124\\\"}}\"\n        },\n        {\n            \"description\": \"[decq643] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"180000001364000010A5D4E8000000000000000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6123\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000000000E+6123\\\"}}\"\n        },\n        {\n            \"description\": \"[decq645] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"1800000013640000E8764817000000000000000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6122\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00000000000E+6122\\\"}}\"\n        },\n        {\n            \"description\": \"[decq647] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"1800000013640000E40B5402000000000000000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6121\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0000000000E+6121\\\"}}\"\n        },\n        {\n            \"description\": \"[decq649] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"1800000013640000CA9A3B00000000000000000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6120\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000000E+6120\\\"}}\"\n        },\n        {\n            \"description\": \"[decq651] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"1800000013640000E1F50500000000000000000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6119\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00000000E+6119\\\"}}\"\n        },\n        {\n            \"description\": \"[decq653] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"180000001364008096980000000000000000000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6118\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0000000E+6118\\\"}}\"\n        },\n        {\n            \"description\": \"[decq655] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"1800000013640040420F0000000000000000000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6117\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000000E+6117\\\"}}\"\n        },\n        {\n            \"description\": \"[decq657] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"18000000136400A086010000000000000000000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6116\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00000E+6116\\\"}}\"\n        },\n        {\n            \"description\": \"[decq659] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"180000001364001027000000000000000000000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6115\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0000E+6115\\\"}}\"\n        },\n        {\n            \"description\": \"[decq661] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"18000000136400E803000000000000000000000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6114\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.000E+6114\\\"}}\"\n        },\n        {\n            \"description\": \"[decq663] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"180000001364006400000000000000000000000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6113\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.00E+6113\\\"}}\"\n        },\n        {\n            \"description\": \"[decq665] fold-down full sequence (Clamped)\",\n            \"canonical_bson\": \"180000001364000A00000000000000000000000000FE5F00\",\n            \"degenerate_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1E+6112\\\"}}\",\n            \"canonical_extjson\": \"{\\\"d\\\" : {\\\"$numberDecimal\\\" : \\\"1.0E+6112\\\"}}\"\n        }\n    ]\n}\n\n"],"names":[],"version":3,"file":"index.ed641456.js.map"}